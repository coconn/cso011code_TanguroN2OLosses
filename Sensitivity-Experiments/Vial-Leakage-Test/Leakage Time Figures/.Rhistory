#
#   return(datac)
# }
#
# df <- ToothGrowth
# dfc <- summarySE(df, measurevar="len", groupvars=c("supp","dose"))
#
# library(ggplot2)
#
# # Use dose as a factor rather than numeric
# dfc2 <- dfc
# dfc2$dose <- factor(dfc2$dose)
#
# # Error bars represent standard error of the mean
# ggplot(dfc2, aes(x=dose, y=len, fill=supp)) +
#   geom_bar(position=position_dodge(), stat="identity") +
#   geom_errorbar(aes(ymin=len-se, ymax=len+se),
#                 width=.2,                    # Width of the error bars
#                 position=position_dodge(.9))
#
#
# # Use 95% confidence intervals instead of SEM
# ggplot(dfc2, aes(x=dose, y=len, fill=supp)) +
#   geom_bar(position=position_dodge(), stat="identity") +
#   geom_errorbar(aes(ymin=len-ci, ymax=len+ci),
#                 width=.2,                    # Width of the error bars
#                 position=position_dodge(.9))
########################################################################
# Line graph over days vials were sitting (Day 0 to Day 92)
########################################################################
# NOTES AND TESTING
# see notes in evernote from mtg with Eric Davidson
# come up with way to rigorously deal with linear vs. quad, etc.
########################################################################
# POSSIBLE TO DO
###### don't forget to do all of this for CH4
zen()
# Vial-Leakage-Test.R
# testing how much the vials leak over time, based on leakage test experiment done in collaboration done with the Venterea lab
# disrupted N project
# CS O'Connell, UMN EEB/IonE
# to do
# organize the data without grouping but also have col for days elapsed
# scatter with log y axis
# add methane
########################################################################
# BRING IN DATA, MAKE DATAFRAME
# go to vialdffull
vialdffull <- read.csv("~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/GC-Data-Rprocessed/vialDFfull.csv", stringsAsFactors=FALSE)
# subset out the leakage study vials
leakagetestvials <- subset(vialdffull, grepl("Leak", GCrun))
#### these results are messed up.  is it possible that these are crazy because the standards that were drawn that day aren't the ones that GC-Rcode-fileloop.R is pointing to?
####### yes - that's what was happening.  fixed now by changing the vial names so only the ones filled the day of the run are called Mix1, etc.
########################################################################
# Add in useful additional variables
# label by week
leakagetestvials <- transform(leakagetestvials,
LeakageTime = ifelse(GCrun=="20140606_Leak0", as.character("Leakage Test Week 0"),
ifelse(GCrun=="20140613_Leak1", as.character("Leakage Test Week 1"),
ifelse(GCrun=="20140701_Leak4", as.character("Leakage Test Week 4"),
ifelse(GCrun=="20140806_Leak8", as.character("Leakage Test Week 8"),
as.character("Leakage Test Week 12"))))))
# time since day leakage test vials were filled (2014.06.05)
# date started leakage experiment
leakagetestvials <- transform(leakagetestvials,
daterun = ifelse(GCrun=="20140606_Leak0", as.character("2014.06.06"),
ifelse(GCrun=="20140613_Leak1", as.character("2014.06.13"),
ifelse(GCrun=="20140701_Leak4", as.character("2014.07.02"),
ifelse(GCrun=="20140806_Leak8", as.character("2014.08.06"),
as.character("2014.09.05"))))))
leakagetestvials$daterun <- gsub("[.]","/",leakagetestvials$daterun)
leakagetestvials$daterun <- as.Date(leakagetestvials$daterun, format="%Y/%m/%d")
# reformat date of GC run
leakagetestvials$SampleDate <- gsub("[.]","/",leakagetestvials$SampleDate)
leakagetestvials$SampleDate <- as.Date(leakagetestvials$SampleDate, format="%Y/%m/%d")
# days since start
leakagetestvials$datediff <- leakagetestvials$daterun - leakagetestvials$SampleDate
# capped by hand or capped with auto crimper?
AUrows <- grepl("^AU", leakagetestvials$SampleName)
leakagetestvials <- transform(leakagetestvials, crimpstyle = ifelse(AUrows==TRUE, as.character("auto"), as.character("hand")))
# initial concentration
leakagetestvials <- transform(leakagetestvials,
initialcon = ifelse(SampleName=="Mix1Leak" | SampleName=="Mix1" | SampleName=="AU-Mix1Leak", as.character("Mix1"),
ifelse(SampleName=="Mix2Leak" | SampleName=="Mix2" | SampleName=="AU-Mix2Leak", as.character("Mix2"),
ifelse(SampleName=="3N2OLeak" | SampleName=="3N2O" | SampleName=="AU-3N2OLeak", as.character("3N2O"),
ifelse(SampleName=="10N2OLeak" | SampleName=="10N2O" | SampleName=="AU-10N2OLeak", as.character("10N2O"),
as.character("3KCO2"))))))
########################################################################
# Save as csv
pathsavefiles = "~/Documents/GITHUB/cso011code_TanguroN2OLosses/Sensitivity-Experiments/Vial-Leakage-Test/"
write.csv(leakagetestvials, file=paste(pathsavefiles, "leakagetestvials.csv", sep = ""), row.names=FALSE)
# C_0 N2O
leakagetestvials <- transform(leakagetestvials,
initialconN2O = ifelse(SampleName=="Mix1Leak" | SampleName=="Mix1" | SampleName=="AU-Mix1Leak", as.numeric(0.301),
ifelse(SampleName=="Mix2Leak" | SampleName=="Mix2" | SampleName=="AU-Mix2Leak", as.numeric(1.57),
ifelse(SampleName=="3N2OLeak" | SampleName=="3N2O" | SampleName=="AU-3N2OLeak", as.numeric(3),
ifelse(SampleName=="10N2OLeak" | SampleName=="10N2O" | SampleName=="AU-10N2OLeak", as.numeric(10),
as.numeric(0))))))
# C_0 CO2
leakagetestvials <- transform(leakagetestvials,
initialconCO2 = ifelse(SampleName=="Mix1Leak" | SampleName=="Mix1" | SampleName=="AU-Mix1Leak", as.numeric(600),
ifelse(SampleName=="Mix2Leak" | SampleName=="Mix2" | SampleName=="AU-Mix2Leak", as.numeric(1000),
ifelse(SampleName=="3N2OLeak" | SampleName=="3N2O" | SampleName=="AU-3N2OLeak", as.numeric(0),
ifelse(SampleName=="10N2OLeak" | SampleName=="10N2O" | SampleName=="AU-10N2OLeak", as.numeric(0),
as.numeric(3000))))))
# C_0 CH4
leakagetestvials <- transform(leakagetestvials,
initialconCH4 = ifelse(SampleName=="Mix1Leak" | SampleName=="Mix1" | SampleName=="AU-Mix1Leak", as.numeric(1),
ifelse(SampleName=="Mix2Leak" | SampleName=="Mix2" | SampleName=="AU-Mix2Leak", as.numeric(1.7),
ifelse(SampleName=="3N2OLeak" | SampleName=="3N2O" | SampleName=="AU-3N2OLeak", as.numeric(0),
ifelse(SampleName=="10N2OLeak" | SampleName=="10N2O" | SampleName=="AU-10N2OLeak", as.numeric(0),
as.numeric(0))))))
View(leakagetestvials)
leakagetestvials$initialconN2O
leakagetestvials$N2Oppm
lnCtC0N2O <- N2Oppm/initialconN2O
lnCtC0N2O <- leakagetestvials$N2Oppm/leakagetestvials$initialconN2O
lnCtC0N2O
lnCtC0N2O==-Inf
lnCtC0N2O(lnCtC0N2O==-Inf)==NaN
lnCtC0N2O[lnCtC0N2O==-Inf]==NaN
lnCtC0N2O
lnCtC0N2O[is.infinite(lnCtC0N2O)] <- NA
lnCtC0N2O
?log
log(5)
lnCtC0N2O <- log(lnCtC0N2O)
lnCtC0N2O
leakagetestvials <- transform(leakagetestvials, lnCtC0N2O)
View(leakagetestvials)
View(leakagetestvials)
leakagetestvials <- transform(leakagetestvials, lnCtC0N2O=lnCtC0N2O)
View(leakagetestvials)
lnCtC0N2O <- leakagetestvials$N2Oppm/leakagetestvials$initialconN2O
lnCtC0N2O[is.infinite(lnCtC0N2O)] <- NA
lnCtC0N2O <- log(lnCtC0N2O)
leakagetestvials <- transform(leakagetestvials, lnCtC0N2O=lnCtC0N2O)
lnCtC0CO2 <- leakagetestvials$CO2ppm/leakagetestvials$initialconCO2
lnCtC0CO2[is.infinite(lnCtC0CO2)] <- NA
lnCtC0CO2 <- log(lnCtC0CO2)
leakagetestvials <- transform(leakagetestvials, lnCtC0CO2=lnCtC0CO2)
lnCtC0CH4 <- leakagetestvials$CH4ppm/leakagetestvials$initialconCH4
lnCtC0CH4[is.infinite(lnCtC0CH4)] <- NA
lnCtC0CH4 <- log(lnCtC0CH4)
leakagetestvials <- transform(leakagetestvials, lnCtC0CH4=lnCtC0CH4)
View(leakagetestvials)
pathsavefiles = "~/Documents/GITHUB/cso011code_TanguroN2OLosses/Sensitivity-Experiments/Vial-Leakage-Test/"
write.csv(leakagetestvials, file=paste(pathsavefiles, "leakagetestvials.csv", sep = ""), row.names=FALSE)
ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0CH4)) + geom_point(shape=1)
leakagetestvials$datediff
ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0CH4)) + geom_point()
str(leakagetestvials$datediff)
leakagetestvials$datediff2 <- as.numeric(leakagetestvials$datediff)
str(leakagetestvials$datediff2)
leakagetestvials$datediff
leakagetestvials$datediff2
leakagetestvials$datediff2 <- as.numeric(leakagetestvials$datediff)
ggplot(leakagetestvials, aes(x=datediff2, y=lnCtC0CH4)) + geom_point()
ggplot(leakagetestvials, aes(x=datediff2, y=lnCtC0N2O, color=initialconN2O)) + geom_point()
leakagetestvials
ht(leakagetestvials)
?ht
ht
head(leakagetestvials)
ggplot(leakagetestvials, aes(x=datediff2, y=lnCtC0N2O, color=initialcon)) + geom_point()
View(leakagetestvials)
zen()
# Vial-Leakage-Test.R
# testing how much the vials leak over time, based on leakage test experiment done in collaboration done with the Venterea lab
# disrupted N project
# CS O'Connell, UMN EEB/IonE
# to do
# organize the data without grouping but also have col for days elapsed
# scatter with log y axis
# add methane
########################################################################
# BRING IN DATA, MAKE DATAFRAME
# go to vialdffull
vialdffull <- read.csv("~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/GC-Data-Rprocessed/vialDFfull.csv", stringsAsFactors=FALSE)
# subset out the leakage study vials
leakagetestvials <- subset(vialdffull, grepl("Leak", GCrun))
#### these results are messed up.  is it possible that these are crazy because the standards that were drawn that day aren't the ones that GC-Rcode-fileloop.R is pointing to?
####### yes - that's what was happening.  fixed now by changing the vial names so only the ones filled the day of the run are called Mix1, etc.
########################################################################
# Add in useful additional variables
# label by week
leakagetestvials <- transform(leakagetestvials,
LeakageTime = ifelse(GCrun=="20140606_Leak0", as.character("Leakage Test Week 0"),
ifelse(GCrun=="20140613_Leak1", as.character("Leakage Test Week 1"),
ifelse(GCrun=="20140701_Leak4", as.character("Leakage Test Week 4"),
ifelse(GCrun=="20140806_Leak8", as.character("Leakage Test Week 8"),
as.character("Leakage Test Week 12"))))))
# time since day leakage test vials were filled (2014.06.05)
# date started leakage experiment
leakagetestvials <- transform(leakagetestvials,
daterun = ifelse(GCrun=="20140606_Leak0", as.character("2014.06.06"),
ifelse(GCrun=="20140613_Leak1", as.character("2014.06.13"),
ifelse(GCrun=="20140701_Leak4", as.character("2014.07.02"),
ifelse(GCrun=="20140806_Leak8", as.character("2014.08.06"),
as.character("2014.09.05"))))))
leakagetestvials$daterun <- gsub("[.]","/",leakagetestvials$daterun)
leakagetestvials$daterun <- as.Date(leakagetestvials$daterun, format="%Y/%m/%d")
# reformat date of GC run
leakagetestvials$SampleDate <- gsub("[.]","/",leakagetestvials$SampleDate)
leakagetestvials$SampleDate <- as.Date(leakagetestvials$SampleDate, format="%Y/%m/%d")
# days since start
leakagetestvials$datediff <- leakagetestvials$daterun - leakagetestvials$SampleDate
leakagetestvials$datediff <- as.numeric(leakagetestvials$datediff)
# capped by hand or capped with auto crimper?
AUrows <- grepl("^AU", leakagetestvials$SampleName)
leakagetestvials <- transform(leakagetestvials, crimpstyle = ifelse(AUrows==TRUE, as.character("auto"), as.character("hand")))
# initial concentrations
leakagetestvials <- transform(leakagetestvials,
initialcon = ifelse(SampleName=="Mix1Leak" | SampleName=="Mix1" | SampleName=="AU-Mix1Leak", as.character("Mix1"),
ifelse(SampleName=="Mix2Leak" | SampleName=="Mix2" | SampleName=="AU-Mix2Leak", as.character("Mix2"),
ifelse(SampleName=="3N2OLeak" | SampleName=="3N2O" | SampleName=="AU-3N2OLeak", as.character("3N2O"),
ifelse(SampleName=="10N2OLeak" | SampleName=="10N2O" | SampleName=="AU-10N2OLeak", as.character("10N2O"),
as.character("3KCO2"))))))
#### Q for Rod - are these concentrations right???
# # ppm values in the standards
# ppmNstds <- c(0.301,1.57,3) # Mix1, Mix2, 3N2O
# ppmCstds <- c(600,1000,3000) # Mix1, Mix2, 3KCO2
# ppmCHstds <- c(1,1.7,0) # Mix1, Mix2, (0,0) - see email "two quick questions: CH4 in standards? and using 10N2O"
# C_0 N2O
leakagetestvials <- transform(leakagetestvials,
initialconN2O = ifelse(SampleName=="Mix1Leak" | SampleName=="Mix1" | SampleName=="AU-Mix1Leak", as.numeric(0.301),
ifelse(SampleName=="Mix2Leak" | SampleName=="Mix2" | SampleName=="AU-Mix2Leak", as.numeric(1.57),
ifelse(SampleName=="3N2OLeak" | SampleName=="3N2O" | SampleName=="AU-3N2OLeak", as.numeric(3),
ifelse(SampleName=="10N2OLeak" | SampleName=="10N2O" | SampleName=="AU-10N2OLeak", as.numeric(10),
as.numeric(0))))))
# C_0 CO2
leakagetestvials <- transform(leakagetestvials,
initialconCO2 = ifelse(SampleName=="Mix1Leak" | SampleName=="Mix1" | SampleName=="AU-Mix1Leak", as.numeric(600),
ifelse(SampleName=="Mix2Leak" | SampleName=="Mix2" | SampleName=="AU-Mix2Leak", as.numeric(1000),
ifelse(SampleName=="3N2OLeak" | SampleName=="3N2O" | SampleName=="AU-3N2OLeak", as.numeric(0),
ifelse(SampleName=="10N2OLeak" | SampleName=="10N2O" | SampleName=="AU-10N2OLeak", as.numeric(0),
as.numeric(3000))))))
# C_0 CH4
leakagetestvials <- transform(leakagetestvials,
initialconCH4 = ifelse(SampleName=="Mix1Leak" | SampleName=="Mix1" | SampleName=="AU-Mix1Leak", as.numeric(1),
ifelse(SampleName=="Mix2Leak" | SampleName=="Mix2" | SampleName=="AU-Mix2Leak", as.numeric(1.7),
ifelse(SampleName=="3N2OLeak" | SampleName=="3N2O" | SampleName=="AU-3N2OLeak", as.numeric(0),
ifelse(SampleName=="10N2OLeak" | SampleName=="10N2O" | SampleName=="AU-10N2OLeak", as.numeric(0),
as.numeric(0))))))
# C_t / C_0 (concentration measured over concentration initial/theoretical)
# C_t is N2Oppm, CO2ppm, CH4ppm columns
# C_0 is initialconN2O, initialconCO2, initialconCH4 columns
lnCtC0N2O <- leakagetestvials$N2Oppm/leakagetestvials$initialconN2O
lnCtC0N2O[is.infinite(lnCtC0N2O)] <- NA
lnCtC0N2O <- log(lnCtC0N2O)
leakagetestvials <- transform(leakagetestvials, lnCtC0N2O=lnCtC0N2O)
lnCtC0CO2 <- leakagetestvials$CO2ppm/leakagetestvials$initialconCO2
lnCtC0CO2[is.infinite(lnCtC0CO2)] <- NA
lnCtC0CO2 <- log(lnCtC0CO2)
leakagetestvials <- transform(leakagetestvials, lnCtC0CO2=lnCtC0CO2)
lnCtC0CH4 <- leakagetestvials$CH4ppm/leakagetestvials$initialconCH4
lnCtC0CH4[is.infinite(lnCtC0CH4)] <- NA
lnCtC0CH4 <- log(lnCtC0CH4)
leakagetestvials <- transform(leakagetestvials, lnCtC0CH4=lnCtC0CH4)
ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0N2O, color=initialcon)) + geom_point()
pathsavefiles = "~/Documents/GITHUB/cso011code_TanguroN2OLosses/Sensitivity-Experiments/Vial-Leakage-Test/"
write.csv(leakagetestvials, file=paste(pathsavefiles, "leakagetestvials.csv", sep = ""), row.names=FALSE)
ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0N2O, color=initialcon)) + geom_point() + geom_smooth(method=lm)
ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0N2O)) + geom_point() + geom_smooth(method=lm)
?geom_smooth
ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0N2O)) + geom_point(color=initialcon) + geom_smooth(method=lm)
ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0N2O)) + geom_point(aes(color=initialcon)) + geom_smooth(method=lm)
ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0N2O, color=initialcon)) + geom_point() + geom_smooth(method=lm)
ggplot(leakagetestvials, aes(x=datediff, y=-lnCtC0N2O)) + geom_point(aes(color=initialcon)) + geom_smooth(method=lm)
ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0N2O)) + geom_point(aes(color=initialcon)) + geom_smooth(method=lm)
cor.test(leakagetestvials$lnCtC0N2O, leakagetestvials$datediff) # default method is "pearson"
?lm
df <- data.frame(x = c(1:100))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 40)
df
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ x) +
geom_point()
p
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black") +
geom_point()
p
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ x) +
geom_point()
p
m = lm(y ~ x, df)
m
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
eq
as.character(as.expression(eq));
eq
p1 = p + geom_text(aes(x = 25, y = 300, label = eq), parse = TRUE)
lm_eqn = function(df){
m = lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
p1
p1 = p + geom_text(aes(x = 25, y = 300, label = lm_eqn(df)), parse = TRUE)
p1
p + annotate(geom="text", x = 25, y = 300, label = lm_eqn(df))
p + annotate(geom="text", x = 25, y = 300, label = lm_eqn(df), parse = TRUE, size=rhosize)
p + annotate(geom="text", x = 25, y = 300, label = lm_eqn(df), parse = TRUE)
p1 = p + annotate(geom="text", x = 25, y = 300, label = lm_eqn(df), parse = TRUE)
p1
m
lm_eqn = function(m) {
l <- list(a = format(coef(m)[1], digits = 2),
b = format(abs(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3));
if (coef(m)[2] >= 0)  {
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,l)
} else {
eq <- substitute(italic(y) == a - b %.% italic(x)*","~~italic(r)^2~"="~r2,l)
}
as.character(as.expression(eq));
}
p1 = p + geom_text(aes(x = 25, y = 300, label = lm_eqn(lm(y ~ x, df))), parse = TRUE)
p1
p1 = p + annotate(geom="text", x = 25, y = 300, label = lm_eqn(lm(y ~ x, df)), parse = TRUE)
p1
?souce
?source
zen()
source("~/Documents/GITHUB/RPersonalFunctionsChristine/lm_eqn.r")
# Vial-Leakage-Test.R
# testing how much the vials leak over time, based on leakage test experiment done in collaboration done with the Venterea lab
# disrupted N project
# CS O'Connell, UMN EEB/IonE
# to do
# organize the data without grouping but also have col for days elapsed
# scatter with log y axis
# add methane
########################################################################
# BRING IN DATA, MAKE DATAFRAME
# go to vialdffull
vialdffull <- read.csv("~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/GC-Data-Rprocessed/vialDFfull.csv", stringsAsFactors=FALSE)
# subset out the leakage study vials
leakagetestvials <- subset(vialdffull, grepl("Leak", GCrun))
#### these results are messed up.  is it possible that these are crazy because the standards that were drawn that day aren't the ones that GC-Rcode-fileloop.R is pointing to?
####### yes - that's what was happening.  fixed now by changing the vial names so only the ones filled the day of the run are called Mix1, etc.
########################################################################
# Add in useful additional variables
# label by week
leakagetestvials <- transform(leakagetestvials,
LeakageTime = ifelse(GCrun=="20140606_Leak0", as.character("Leakage Test Week 0"),
ifelse(GCrun=="20140613_Leak1", as.character("Leakage Test Week 1"),
ifelse(GCrun=="20140701_Leak4", as.character("Leakage Test Week 4"),
ifelse(GCrun=="20140806_Leak8", as.character("Leakage Test Week 8"),
as.character("Leakage Test Week 12"))))))
# time since day leakage test vials were filled (2014.06.05)
# date started leakage experiment
leakagetestvials <- transform(leakagetestvials,
daterun = ifelse(GCrun=="20140606_Leak0", as.character("2014.06.06"),
ifelse(GCrun=="20140613_Leak1", as.character("2014.06.13"),
ifelse(GCrun=="20140701_Leak4", as.character("2014.07.02"),
ifelse(GCrun=="20140806_Leak8", as.character("2014.08.06"),
as.character("2014.09.05"))))))
leakagetestvials$daterun <- gsub("[.]","/",leakagetestvials$daterun)
leakagetestvials$daterun <- as.Date(leakagetestvials$daterun, format="%Y/%m/%d")
# reformat date of GC run
leakagetestvials$SampleDate <- gsub("[.]","/",leakagetestvials$SampleDate)
leakagetestvials$SampleDate <- as.Date(leakagetestvials$SampleDate, format="%Y/%m/%d")
# days since start
leakagetestvials$datediff <- leakagetestvials$daterun - leakagetestvials$SampleDate
leakagetestvials$datediff <- as.numeric(leakagetestvials$datediff)
# capped by hand or capped with auto crimper?
AUrows <- grepl("^AU", leakagetestvials$SampleName)
leakagetestvials <- transform(leakagetestvials, crimpstyle = ifelse(AUrows==TRUE, as.character("auto"), as.character("hand")))
# initial concentrations
leakagetestvials <- transform(leakagetestvials,
initialcon = ifelse(SampleName=="Mix1Leak" | SampleName=="Mix1" | SampleName=="AU-Mix1Leak", as.character("Mix1"),
ifelse(SampleName=="Mix2Leak" | SampleName=="Mix2" | SampleName=="AU-Mix2Leak", as.character("Mix2"),
ifelse(SampleName=="3N2OLeak" | SampleName=="3N2O" | SampleName=="AU-3N2OLeak", as.character("3N2O"),
ifelse(SampleName=="10N2OLeak" | SampleName=="10N2O" | SampleName=="AU-10N2OLeak", as.character("10N2O"),
as.character("3KCO2"))))))
#### Q for Rod - are these concentrations right???
# # ppm values in the standards
# ppmNstds <- c(0.301,1.57,3) # Mix1, Mix2, 3N2O
# ppmCstds <- c(600,1000,3000) # Mix1, Mix2, 3KCO2
# ppmCHstds <- c(1,1.7,0) # Mix1, Mix2, (0,0) - see email "two quick questions: CH4 in standards? and using 10N2O"
# C_0 N2O
leakagetestvials <- transform(leakagetestvials,
initialconN2O = ifelse(SampleName=="Mix1Leak" | SampleName=="Mix1" | SampleName=="AU-Mix1Leak", as.numeric(0.301),
ifelse(SampleName=="Mix2Leak" | SampleName=="Mix2" | SampleName=="AU-Mix2Leak", as.numeric(1.57),
ifelse(SampleName=="3N2OLeak" | SampleName=="3N2O" | SampleName=="AU-3N2OLeak", as.numeric(3),
ifelse(SampleName=="10N2OLeak" | SampleName=="10N2O" | SampleName=="AU-10N2OLeak", as.numeric(10),
as.numeric(0))))))
# C_0 CO2
leakagetestvials <- transform(leakagetestvials,
initialconCO2 = ifelse(SampleName=="Mix1Leak" | SampleName=="Mix1" | SampleName=="AU-Mix1Leak", as.numeric(600),
ifelse(SampleName=="Mix2Leak" | SampleName=="Mix2" | SampleName=="AU-Mix2Leak", as.numeric(1000),
ifelse(SampleName=="3N2OLeak" | SampleName=="3N2O" | SampleName=="AU-3N2OLeak", as.numeric(0),
ifelse(SampleName=="10N2OLeak" | SampleName=="10N2O" | SampleName=="AU-10N2OLeak", as.numeric(0),
as.numeric(3000))))))
# C_0 CH4
leakagetestvials <- transform(leakagetestvials,
initialconCH4 = ifelse(SampleName=="Mix1Leak" | SampleName=="Mix1" | SampleName=="AU-Mix1Leak", as.numeric(1),
ifelse(SampleName=="Mix2Leak" | SampleName=="Mix2" | SampleName=="AU-Mix2Leak", as.numeric(1.7),
ifelse(SampleName=="3N2OLeak" | SampleName=="3N2O" | SampleName=="AU-3N2OLeak", as.numeric(0),
ifelse(SampleName=="10N2OLeak" | SampleName=="10N2O" | SampleName=="AU-10N2OLeak", as.numeric(0),
as.numeric(0))))))
########################################################################
# Add exponential decay ratio column
# C_t / C_0 (concentration measured over concentration initial/theoretical)
# C_t is N2Oppm, CO2ppm, CH4ppm columns
# C_0 is initialconN2O, initialconCO2, initialconCH4 columns
lnCtC0N2O <- leakagetestvials$N2Oppm/leakagetestvials$initialconN2O
lnCtC0N2O[is.infinite(lnCtC0N2O)] <- NA
lnCtC0N2O <- log(lnCtC0N2O)
leakagetestvials <- transform(leakagetestvials, lnCtC0N2O=lnCtC0N2O)
lnCtC0CO2 <- leakagetestvials$CO2ppm/leakagetestvials$initialconCO2
lnCtC0CO2[is.infinite(lnCtC0CO2)] <- NA
lnCtC0CO2 <- log(lnCtC0CO2)
leakagetestvials <- transform(leakagetestvials, lnCtC0CO2=lnCtC0CO2)
lnCtC0CH4 <- leakagetestvials$CH4ppm/leakagetestvials$initialconCH4
lnCtC0CH4[is.infinite(lnCtC0CH4)] <- NA
lnCtC0CH4 <- log(lnCtC0CH4)
leakagetestvials <- transform(leakagetestvials, lnCtC0CH4=lnCtC0CH4)
########################################################################
# Save as csv
pathsavefiles = "~/Documents/GITHUB/cso011code_TanguroN2OLosses/Sensitivity-Experiments/Vial-Leakage-Test/"
write.csv(leakagetestvials, file=paste(pathsavefiles, "leakagetestvials.csv", sep = ""), row.names=FALSE)
ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0N2O)) + geom_point(aes(color=initialcon)) + geom_smooth(method=lm)
p <- ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0N2O)) + geom_point(aes(color=initialcon)) + geom_smooth(method=lm)
p <- ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0N2O)) + geom_point(aes(color=initialcon)) + geom_smooth(method=lm)
p + annotate(geom="text", x = 25, y = -0.75, label = lm_eqn(lm(lnCtC0N2O ~ datediff, df)), parse = TRUE)
p + annotate(geom="text", x = 25, y = -0.75, label = lm_eqn(lm(leakagetestvials$lnCtC0N2O ~ leakagetestvials$datediff, df)), parse = TRUE)
p + annotate(geom="text", x = 25, y = -0.75, label = lm_eqn(lm(lnCtC0N2O ~ datediff, leakagetestvials)), parse = TRUE)
p + annotate(geom="text", x = 25, y = -0.01, label = lm_eqn(lm(lnCtC0N2O ~ datediff, leakagetestvials)), parse = TRUE)
p + annotate(geom="text", x = 50, y = -0.01, label = lm_eqn(lm(lnCtC0N2O ~ datediff, leakagetestvials)), parse = TRUE)
p + annotate(geom="text", x = 75, y = -0.01, label = lm_eqn(lm(lnCtC0N2O ~ datediff, leakagetestvials)), parse = TRUE)
p + annotate(geom="text", x = Inf, y = -Inf,vjust=1, hjust=1, label = lm_eqn(lm(lnCtC0N2O ~ datediff, leakagetestvials)), parse = TRUE)
p + annotate(geom="text", x = Inf, y = Inf,vjust=1, hjust=1, label = lm_eqn(lm(lnCtC0N2O ~ datediff, leakagetestvials)), parse = TRUE)
p + annotate(geom="text", x = 25, y = Inf,vjust=1, hjust=1, label = lm_eqn(lm(lnCtC0N2O ~ datediff, leakagetestvials)), parse = TRUE)
p + annotate(geom="text", x = Inf, y = Inf,vjust=1, hjust=1, label = lm_eqn(lm(lnCtC0N2O ~ datediff, leakagetestvials)), parse = TRUE)
p + annotate(geom="text", x = Inf, y = Inf, vjust=0.9, hjust=1, label = lm_eqn(lm(lnCtC0N2O ~ datediff, leakagetestvials)), parse = TRUE)
p + annotate(geom="text", x = Inf, y = Inf, vjust=1.1, hjust=1, label = lm_eqn(lm(lnCtC0N2O ~ datediff, leakagetestvials)), parse = TRUE)
p + annotate(geom="text", x = Inf, y = Inf, vjust=1.1, hjust=1.1, label = lm_eqn(lm(lnCtC0N2O ~ datediff, leakagetestvials)), parse = TRUE)
p + annotate(geom="text", x = Inf, y = Inf, vjust=1.1, hjust=1.01, label = lm_eqn(lm(lnCtC0N2O ~ datediff, leakagetestvials)), parse = TRUE)
p + annotate(geom="text", x = Inf, y = Inf, vjust=1.2, hjust=1.01, label = lm_eqn(lm(lnCtC0N2O ~ datediff, leakagetestvials)), parse = TRUE)
p + annotate(geom="text", x = Inf, y = Inf, vjust=2, hjust=1.01, label = lm_eqn(lm(lnCtC0N2O ~ datediff, leakagetestvials)), parse = TRUE)
p + annotate(geom="text", x = Inf, y = Inf, vjust=1.5, hjust=1.01, label = lm_eqn(lm(lnCtC0N2O ~ datediff, leakagetestvials)), parse = TRUE)
p + annotate(geom="text", x = Inf, y = Inf, vjust=1.5, hjust=1.03, label = lm_eqn(lm(lnCtC0N2O ~ datediff, leakagetestvials)), parse = TRUE)
p + annotate(geom="text", x = Inf, y = Inf, vjust=1.3, hjust=1.03, label = lm_eqn(lm(lnCtC0N2O ~ datediff, leakagetestvials)), parse = TRUE)
p + annotate(geom="text", x = Inf, y = Inf, vjust=1.25, hjust=1.03, label = lm_eqn(lm(lnCtC0N2O ~ datediff, leakagetestvials)), parse = TRUE)
p1 <- ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0N2O)) + geom_point(aes(color=initialcon)) + geom_smooth(method=lm) + annotate(geom="text", x = Inf, y = Inf, vjust=1.25, hjust=1.03, label = lm_eqn(lm(lnCtC0N2O ~ datediff, leakagetestvials)), parse = TRUE)
p1
p2 <- ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0N2O, color=initialcon)) + geom_point() + geom_smooth(method=lm)
p2
grid.arrange(p1, p2, ncol=1)
library(gridExtra)
grid.arrange(p1, p2, ncol=1)
grid.arrange(p1, p2, ncol=1, main=textGrob("Impacts when you vary how services are prioritized")
)
grid.arrange(p1, p2, ncol=1, main=textGrob("Impacts when you vary how services are prioritized"),gp=gpar(fontsize=20,font=1),just="top"))
grid.arrange(p1, p2, ncol=1, main=textGrob("Impacts when you vary how services are prioritized"),gp=gpar(fontsize=20,font=1),just="top")
grid.arrange(p1, p2, ncol=1, main=textGrob("Impacts when you vary how services are prioritized",gp=gpar(fontsize=20,font=1),just="top"))
grid.arrange(p1, p2, ncol=1, main=textGrob("Impacts when you vary how services are prioritized",gp=gpar(font=1),just="top"))
grid.arrange(p1, p2, ncol=1, main=textGrob("Impacts when you vary how services are prioritized",just="top"))
grid.arrange(p1, p2, ncol=1, main=textGrob("Leakage Test, N2O",just="top"))
p1 <- ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0N2O)) + geom_point(aes(color=initialcon)) + geom_smooth(method=lm) + ylab("Days Elapsed to GC Run") + xlab("ln(C_t / C_0)")  + annotate(geom="text", x = Inf, y = Inf, vjust=1.25, hjust=1.03, label = lm_eqn(lm(lnCtC0N2O ~ datediff, leakagetestvials)), parse = TRUE)
p2 <- ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0N2O, color=initialcon)) + geom_point() + geom_smooth(method=lm)
grid.arrange(p1, p2, ncol=1, main=textGrob("Leakage Test, N2O",just="top"))
p1 <- ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0N2O)) + geom_point(aes(color=initialcon)) + geom_smooth(method=lm) + xlab("Days Elapsed to GC Run") + ylab("ln(C_t / C_0)")  + annotate(geom="text", x = Inf, y = Inf, vjust=1.25, hjust=1.03, label = lm_eqn(lm(lnCtC0N2O ~ datediff, leakagetestvials)), parse = TRUE)
p2 <- ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0N2O, color=initialcon)) + geom_point() + geom_smooth(method=lm)
grid.arrange(p1, p2, ncol=1, main=textGrob("Leakage Test, N2O",just="top"))
p2 <- ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0N2O, color=initialcon)) + geom_point() + geom_smooth(method=lm) + xlab("Days Elapsed Before GC Run") + ylab("ln(C_t / C_0)")
grid.arrange(p1, p2, ncol=1, main=textGrob("Leakage Test, N2O",just="top"))
p1 <- ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0N2O)) + geom_point(aes(color=initialcon)) + geom_smooth(method=lm) + xlab("Days Elapsed Before GC Run") + ylab("ln(C_t / C_0)") + scale_fill_discrete(name="Initial\nConcentration") + annotate(geom="text", x = Inf, y = Inf, vjust=1.25, hjust=1.03, label = lm_eqn(lm(lnCtC0N2O ~ datediff, leakagetestvials)), parse = TRUE)
p2 <- ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0N2O, color=initialcon)) + geom_point() + geom_smooth(method=lm) + xlab("Days Elapsed Before GC Run") + ylab("ln(C_t / C_0)")
grid.arrange(p1, p2, ncol=1, main=textGrob("Leakage Test, N2O",just="top"))
p1 <- ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0N2O)) + geom_point(aes(color=initialcon)) + geom_smooth(method=lm) + xlab("Days Elapsed Before GC Run") + ylab("ln(C_t / C_0)") + scale_colour_discrete(name="Initial\nConcentration") + annotate(geom="text", x = Inf, y = Inf, vjust=1.25, hjust=1.03, label = lm_eqn(lm(lnCtC0N2O ~ datediff, leakagetestvials)), parse = TRUE)
p2 <- ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0N2O, color=initialcon)) + geom_point() + geom_smooth(method=lm) + xlab("Days Elapsed Before GC Run") + ylab("ln(C_t / C_0)")
grid.arrange(p1, p2, ncol=1, main=textGrob("Leakage Test, N2O",just="top"))
p2 <- ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0N2O, color=initialcon)) + geom_point() + geom_smooth(method=lm) + xlab("Days Elapsed Before GC Run") + ylab("ln(C_t / C_0)") + scale_colour_discrete(name="Initial\nConcentration")
grid.arrange(p1, p2, ncol=1, main=textGrob("Leakage Test, N2O",just="top"))
library(gridExtra)
# where to save plots
pathsavefiles = "~/Documents/GITHUB/cso011code_TanguroN2OLosses/Sensitivity-Experiments/Vial-Leakage-Test/Leakage Time Figures/"
setwd(pathsavefiles)
# lm line info
source("~/Documents/GITHUB/RPersonalFunctionsChristine/lm_eqn.r")
# N2O graphs
p1 <- ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0N2O)) + geom_point(aes(color=initialcon)) + geom_smooth(method=lm) + xlab("Days Elapsed Before GC Run") + ylab("ln(C_t / C_0)") + scale_colour_discrete(name="Initial\nConcentration") + annotate(geom="text", x = Inf, y = Inf, vjust=1.25, hjust=1.03, label = lm_eqn(lm(lnCtC0N2O ~ datediff, leakagetestvials)), parse = TRUE)
p2 <- ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0N2O, color=initialcon)) + geom_point() + geom_smooth(method=lm) + xlab("Days Elapsed Before GC Run") + ylab("ln(C_t / C_0)") + scale_colour_discrete(name="Initial\nConcentration")
png(file = "leakageN2O.png",width=5,height=10,units="in",res=300) # tiff(file=...) also an option
grid.arrange(p1, p2, ncol=1, main=textGrob("Leakage Test, N2O",just="top"))
dev.off()
png(file = "leakageN2O.png",width=10,height=10,units="in",res=300) # tiff(file=...) also an option
grid.arrange(p1, p2, ncol=1, main=textGrob("Leakage Test, N2O",just="top"))
dev.off()
# CO2 graphs
p1 <- ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0CO2)) + geom_point(aes(color=initialcon)) + geom_smooth(method=lm) + xlab("Days Elapsed Before GC Run") + ylab("ln(C_t / C_0)") + scale_colour_discrete(name="Initial\nConcentration") + annotate(geom="text", x = Inf, y = Inf, vjust=1.25, hjust=1.03, label = lm_eqn(lm(lnCtC0CO2 ~ datediff, leakagetestvials)), parse = TRUE)
p2 <- ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0CO2, color=initialcon)) + geom_point() + geom_smooth(method=lm) + xlab("Days Elapsed Before GC Run") + ylab("ln(C_t / C_0)") + scale_colour_discrete(name="Initial\nConcentration")
png(file = "leakageCO2.png",width=10,height=10,units="in",res=300) # tiff(file=...) also an option
grid.arrange(p1, p2, ncol=1, main=textGrob("Leakage Test, CO2",just="top"))
dev.off()
# CH4 graphs
p1 <- ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0CH4)) + geom_point(aes(color=initialcon)) + geom_smooth(method=lm) + xlab("Days Elapsed Before GC Run") + ylab("ln(C_t / C_0)") + scale_colour_discrete(name="Initial\nConcentration") + annotate(geom="text", x = Inf, y = Inf, vjust=1.25, hjust=1.03, label = lm_eqn(lm(lnCtC0CH4 ~ datediff, leakagetestvials)), parse = TRUE)
p2 <- ggplot(leakagetestvials, aes(x=datediff, y=lnCtC0CH4, color=initialcon)) + geom_point() + geom_smooth(method=lm) + xlab("Days Elapsed Before GC Run") + ylab("ln(C_t / C_0)") + scale_colour_discrete(name="Initial\nConcentration")
png(file = "leakageCH4.png",width=10,height=10,units="in",res=300) # tiff(file=...) also an option
grid.arrange(p1, p2, ncol=1, main=textGrob("Leakage Test, CH4",just="top"))
dev.off()
