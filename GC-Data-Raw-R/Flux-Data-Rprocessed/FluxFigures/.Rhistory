ggsave(file=paste(pathsavefigures, "sitetrackingN2O.png", sep=""),width=5,height=5,units="in",dpi=400)
}
# CO2 flux pattern for each site
{
# ggplot
sitetrackingCO2 <- ggplot(sitedatesummary, aes(x=SampleDate2, y=meanfluxCO2l, color=color.use)) + geom_errorbar(aes(ymin=meanfluxCO2l-sdfluxCO2l, ymax=meanfluxCO2l+sdfluxCO2l), width=5) + geom_point(size=1) + facet_wrap( ~ Site, ncol=3) + xlab("Sampling Date") + ylab("LinearFlux CO2") + geom_line() + theme(legend.position="none")
# where to save figure
pathsavefigures = "~/Documents/GITHUB/cso011code_TanguroN2OLosses/TanguroN2OLosses-Analysis/Analysis-Figures-Tanguro-MasterDataSheet/"
# save figure
ggsave(file=paste(pathsavefigures, "sitetrackingCO2.png", sep=""),width=5,height=5,units="in",dpi=400)
}
# Moisture patterns for each site
{
# ggplot
sitetrackingmois <- ggplot(sitedatesummary, aes(x=SampleDate2, y=meanSoilMoisPercent, color=color.use)) + geom_errorbar(aes(ymin=meanSoilMoisPercent-sdSoilMoisPercent, ymax=meanSoilMoisPercent+sdSoilMoisPercent), width=5) + geom_point(size=1) + facet_wrap( ~ Site, ncol=3) + xlab("Sampling Date") + ylab("Soil Moisture Percent") + geom_line() + theme(legend.position="none")
# where to save figure
pathsavefigures = "~/Documents/GITHUB/cso011code_TanguroN2OLosses/TanguroN2OLosses-Analysis/Analysis-Figures-Tanguro-MasterDataSheet/"
# save figure
ggsave(file=paste(pathsavefigures, "sitetrackingmois.png", sep=""),width=5,height=5,units="in",dpi=400)
}
########################################################################
# NOTES AND TESTING
########################################################################
# POSSIBLE TO DO
###### don't forget to do all of this for CH4
co2lin
co2linloess
grid.arrange(soiltmploess, soilmoisloess, no2linloess, co2linloess, nrow = 4, ncol = 1)
png(file = paste(pathsavefigures, "fluxes-factors-by-time-Nchambers.png", sep=""),width=10,height=14,units="in",res=400)
grid.arrange(soiltmploess, soilmoisloess, no2linloess, co2linloess, nrow = 4, ncol = 1)
dev.off()
}
grid.arrange(soilmoisfacet, n2olinfacet, co2linfacet, nrow = 3, ncol = 1)
png(file = paste(pathsavefigures, "fluxes-factors-by-time-sitedate-facet-noloess.png", sep=""),width=10,height=14,units="in",res=400)
grid.arrange(soilmoisfacet, n2olinfacet, co2linfacet, nrow = 3, ncol = 1)
dev.off()
}
grid.arrange(scatter1, scatter2, scatter3, scatter4, nrow = 2, ncol = 2)
{
pathsavefigures = "~/Documents/GITHUB/cso011code_TanguroN2OLosses/TanguroN2OLosses-Analysis/Analysis-Figures-Tanguro-MasterDataSheet/"
# grid.arrange and save
png(file = paste(pathsavefigures, "fluxes-factors-by-time-sitedate-facet-noloess.png", sep=""),width=10,height=14,units="in",res=400)
grid.arrange(soilmoisfacet, n2olinfacet, co2linfacet, nrow = 3, ncol = 1)
dev.off()
}
grid.arrange(scatter1, scatter2, scatter3, scatter4, nrow = 2, ncol = 2)
scatter1 <- ggplot(subset(fluxesfullmerge,GasType=="N2O"), aes(x=LinearFlux, y=SoilMoisPercent, color=color.use)) + geom_point(shape=1) + theme(legend.position="none") + xlab("LinearFlux N2O") + ylab("SoilMoisPercent") + geom_smooth(method=lm,   # Add linear regression lines
se=TRUE,    # Do or don't add shaded confidence region
fullrange=T) # Extend regression lines beyond the domain of the data
scatter1
# a bunch of flux by factor scatter plots
{
scatter1 <- ggplot(subset(fluxesfullmerge,GasType=="N2O"), aes(x=LinearFlux, y=SoilMoisPercent, color=color.use)) + geom_point(shape=1) + theme(legend.position="none") + xlab("LinearFlux N2O") + ylab("SoilMoisPercent") + geom_smooth(method=lm,   # Add linear regression lines
se=TRUE,    # Do or don't add shaded confidence region
fullrange=T) # Extend regression lines beyond the domain of the data
scatter2 <- ggplot(subset(fluxesfullmerge,GasType=="CO2"), aes(x=LinearFlux, y=SoilMoisPercent, color=color.use)) + geom_point(shape=1) + theme(legend.position="none") + xlab("LinearFlux CO2") + ylab("SoilMoisPercent") + geom_smooth(method=lm,   # Add linear regression lines
se=TRUE,    # Do or don't add shaded confidence region
fullrange=T) # Extend regression lines beyond the domain of the data
scatter3 <- ggplot(subset(fluxesfullmerge,GasType=="N2O"), aes(x=LinearFlux, y=SoilTmpEnd, color=color.use)) + geom_point(shape=1) + theme(legend.position="none") + xlab("LinearFlux N2O") + ylab("Soil Tmp") + geom_smooth(method=lm,   # Add linear regression lines
se=TRUE,    # Do or don't add shaded confidence region
fullrange=T) # Extend regression lines beyond the domain of the data
scatter4 <- ggplot(subset(fluxesfullmerge,GasType=="CO2"), aes(x=LinearFlux, y=SoilTmpEnd, color=color.use)) + geom_point(shape=1) + theme(legend.position="none") + xlab("LinearFlux CO2") + ylab("Soil Tmp") + geom_smooth(method=lm,   # Add linear regression lines
se=TRUE,    # Do or don't add shaded confidence region
fullrange=T) # Extend regression lines beyond the domain of the data
}
# where to save figure
{
pathsavefigures = "~/Documents/GITHUB/cso011code_TanguroN2OLosses/TanguroN2OLosses-Analysis/Analysis-Figures-Tanguro-MasterDataSheet/"
# grid.arrange and save
png(file = paste(pathsavefigures, "flux-factors-scatterplots.png", sep=""),width=10,height=10,units="in",res=400)
grid.arrange(scatter1, scatter2, scatter3, scatter4, nrow = 2, ncol = 2)
dev.off()
}
# N2O flux pattern for each site
{
# ggplot
sitetrackingN2O <- ggplot(sitedatesummary, aes(x=SampleDate2, y=meanfluxN2Ol, color=color.use)) + geom_errorbar(aes(ymin=meanfluxN2Ol-sdfluxN2Ol, ymax=meanfluxN2Ol+sdfluxN2Ol), width=5) + geom_point(size=1) + facet_wrap( ~ Site, ncol=3) + xlab("Sampling Date") + ylab("LinearFlux N2O") + geom_line() + theme(legend.position="none")
# where to save figure
pathsavefigures = "~/Documents/GITHUB/cso011code_TanguroN2OLosses/TanguroN2OLosses-Analysis/Analysis-Figures-Tanguro-MasterDataSheet/"
# save figure
ggsave(file=paste(pathsavefigures, "sitetrackingN2O.png", sep=""),width=5,height=5,units="in",dpi=400)
}
# CO2 flux pattern for each site
{
# ggplot
sitetrackingCO2 <- ggplot(sitedatesummary, aes(x=SampleDate2, y=meanfluxCO2l, color=color.use)) + geom_errorbar(aes(ymin=meanfluxCO2l-sdfluxCO2l, ymax=meanfluxCO2l+sdfluxCO2l), width=5) + geom_point(size=1) + facet_wrap( ~ Site, ncol=3) + xlab("Sampling Date") + ylab("LinearFlux CO2") + geom_line() + theme(legend.position="none")
# where to save figure
pathsavefigures = "~/Documents/GITHUB/cso011code_TanguroN2OLosses/TanguroN2OLosses-Analysis/Analysis-Figures-Tanguro-MasterDataSheet/"
# save figure
ggsave(file=paste(pathsavefigures, "sitetrackingCO2.png", sep=""),width=5,height=5,units="in",dpi=400)
}
# Moisture patterns for each site
{
# ggplot
sitetrackingmois <- ggplot(sitedatesummary, aes(x=SampleDate2, y=meanSoilMoisPercent, color=color.use)) + geom_errorbar(aes(ymin=meanSoilMoisPercent-sdSoilMoisPercent, ymax=meanSoilMoisPercent+sdSoilMoisPercent), width=5) + geom_point(size=1) + facet_wrap( ~ Site, ncol=3) + xlab("Sampling Date") + ylab("Soil Moisture Percent") + geom_line() + theme(legend.position="none")
# where to save figure
pathsavefigures = "~/Documents/GITHUB/cso011code_TanguroN2OLosses/TanguroN2OLosses-Analysis/Analysis-Figures-Tanguro-MasterDataSheet/"
# save figure
ggsave(file=paste(pathsavefigures, "sitetrackingmois.png", sep=""),width=5,height=5,units="in",dpi=400)
}
sitetrackingN2O <- ggplot(sitedatesummary, aes(x=SampleDate2, y=meanfluxN2Ol, color=color.use)) + geom_errorbar(aes(ymin=meanfluxN2Ol-sdfluxN2Ol, ymax=meanfluxN2Ol+sdfluxN2Ol), width=5) + geom_point(size=1) + facet_wrap( ~ Site, ncol=3) + xlab("Sampling Date") + ylab("LinearFlux N2O") + geom_line() + theme(legend.position="none",axis.text.x = element_text(angle=45, hjust=1, vjust=1))
sitetrackingN2O
# N2O flux pattern for each site
{
# ggplot
sitetrackingN2O <- ggplot(sitedatesummary, aes(x=SampleDate2, y=meanfluxN2Ol, color=color.use)) + geom_errorbar(aes(ymin=meanfluxN2Ol-sdfluxN2Ol, ymax=meanfluxN2Ol+sdfluxN2Ol), width=5) + geom_point(size=1) + facet_wrap( ~ Site, ncol=3) + xlab("Sampling Date") + ylab("LinearFlux N2O") + geom_line() + theme(legend.position="none",axis.text.x = element_text(angle=45, hjust=1, vjust=1))
# where to save figure
pathsavefigures = "~/Documents/GITHUB/cso011code_TanguroN2OLosses/TanguroN2OLosses-Analysis/Analysis-Figures-Tanguro-MasterDataSheet/"
# save figure
ggsave(file=paste(pathsavefigures, "sitetrackingN2O.png", sep=""),width=5,height=5,units="in",dpi=400)
}
# CO2 flux pattern for each site
{
# ggplot
sitetrackingCO2 <- ggplot(sitedatesummary, aes(x=SampleDate2, y=meanfluxCO2l, color=color.use)) + geom_errorbar(aes(ymin=meanfluxCO2l-sdfluxCO2l, ymax=meanfluxCO2l+sdfluxCO2l), width=5) + geom_point(size=1) + facet_wrap( ~ Site, ncol=3) + xlab("Sampling Date") + ylab("LinearFlux CO2") + geom_line() + theme(legend.position="none", axis.text.x = element_text(angle=45, hjust=1, vjust=1))
# where to save figure
pathsavefigures = "~/Documents/GITHUB/cso011code_TanguroN2OLosses/TanguroN2OLosses-Analysis/Analysis-Figures-Tanguro-MasterDataSheet/"
# save figure
ggsave(file=paste(pathsavefigures, "sitetrackingCO2.png", sep=""),width=5,height=5,units="in",dpi=400)
}
# Moisture patterns for each site
{
# ggplot
sitetrackingmois <- ggplot(sitedatesummary, aes(x=SampleDate2, y=meanSoilMoisPercent, color=color.use)) + geom_errorbar(aes(ymin=meanSoilMoisPercent-sdSoilMoisPercent, ymax=meanSoilMoisPercent+sdSoilMoisPercent), width=5) + geom_point(size=1) + facet_wrap( ~ Site, ncol=3) + xlab("Sampling Date") + ylab("Soil Moisture Percent") + geom_line() + theme(legend.position="none", axis.text.x = element_text(angle=45, hjust=1, vjust=1))
# where to save figure
pathsavefigures = "~/Documents/GITHUB/cso011code_TanguroN2OLosses/TanguroN2OLosses-Analysis/Analysis-Figures-Tanguro-MasterDataSheet/"
# save figure
ggsave(file=paste(pathsavefigures, "sitetrackingmois.png", sep=""),width=5,height=5,units="in",dpi=400)
}
?file.copy
origindir <- c("~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/GC-Data-RawFolders/2014 10 Nov Jankowski Comparison")
paste(origindir, "Run Sheets Jankowski Comparison/Christine 14Novimg001.jpg", sep = "/")
filestocopy <- c(paste(origindir, "Run Sheets Jankowski Comparison/Christine 14Novimg001.jpg", sep = "/"),
paste(origindir, "Run Sheets Jankowski Comparison/Christine 14Novimg001.jpg", sep = "/"),
paste(origindir, "Run Sheets Jankowski Comparison/Christine 14Novimg001.jpg", sep = "/"),
paste(origindir, "Run Sheets Jankowski Comparison/Christine 14Novimg001.jpg", sep = "/"),
paste(origindir, "Run Sheets Jankowski Comparison/Christine 14Novimg001.jpg", sep = "/"))
filestocopy
filestocopy <- c(paste(origindir, "Run Sheets Jankowski Comparison/Christine 14Novimg001.jpg", sep = "/"),
paste(origindir, "Run Sheets Jankowski Comparison/Christine 14Novimg002.jpg", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/ecd.txt", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/fid.txt", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/tcd.txt", sep = "/"))
filestocopy
targetdir <- c("~/Documents/GITHUB/cso011code_TanguroN2OLosses/Sensitivity-Experiments/UMN-vs-CENA-Test/InfoForJankowskiComparison")
# raw GC data
origindir <- c("~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/GC-Data-RawFolders/2014 10 Nov Jankowski Comparison")
filestocopy <- c(paste(origindir, "Run Sheets Jankowski Comparison/Christine 14Novimg001.jpg", sep = "/"),
paste(origindir, "Run Sheets Jankowski Comparison/Christine 14Novimg002.jpg", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/ecd.txt", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/fid.txt", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/tcd.txt", sep = "/"))
file.copy(from=filestocopy, to=targetdir,
overwrite = recursive, recursive = FALSE,
copy.mode = TRUE)
# raw GC data
origindir <- c("~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/GC-Data-RawFolders/2014 10 Nov Jankowski Comparison")
filestocopy <- c(paste(origindir, "Run Sheets Jankowski Comparison/Christine 14Novimg001.jpg", sep = "/"),
paste(origindir, "Run Sheets Jankowski Comparison/Christine 14Novimg002.jpg", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/ecd.txt", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/fid.txt", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/tcd.txt", sep = "/"))
file.copy(from=filestocopy, to=targetdir,
overwrite = TRUE, recursive = FALSE,
copy.mode = TRUE)
# copy everything to folder for KathiJo
targetdir <- c("~/Documents/GITHUB/cso011code_TanguroN2OLosses/Sensitivity-Experiments/UMN-vs-CENA-Test/InfoForJankowskiComparison/")
# raw GC data
origindir <- c("~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/GC-Data-RawFolders/2014 10 Nov Jankowski Comparison")
filestocopy <- c(paste(origindir, "Run Sheets Jankowski Comparison/Christine 14Novimg001.jpg", sep = "/"),
paste(origindir, "Run Sheets Jankowski Comparison/Christine 14Novimg002.jpg", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/ecd.txt", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/fid.txt", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/tcd.txt", sep = "/"))
file.copy(from=filestocopy, to=targetdir,
overwrite = TRUE, recursive = FALSE,
copy.mode = TRUE)
# copy everything to folder for KathiJo
targetdir <- c("~/Documents/GITHUB/cso011code_TanguroN2OLosses/Sensitivity-Experiments/UMN-vs-CENA-Test/InfoForJankowskiComparison/")
# raw GC data
origindir <- c("~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/GC-Data-RawFolders/2014 10 Nov Jankowski Comparison")
filestocopy <- c(paste(origindir, "Run Sheets Jankowski Comparison/Christine 14Novimg001.jpg", sep = "/"),
paste(origindir, "Run Sheets Jankowski Comparison/Christine 14Novimg002.jpg", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/ecd.txt", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/fid.txt", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/tcd.txt", sep = "/"))
file.copy(from=filestocopy, to=targetdir,
overwrite = FALSE, recursive = FALSE,
copy.mode = TRUE)
# raw GC data
origindir <- c("~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/GC-Data-RawFolders/2014 10 Nov Jankowski Comparison")
filestocopy <- c(paste(origindir, "Run Sheets Jankowski Comparison/Christine 14Novimg001.jpg", sep = "/"),
paste(origindir, "Run Sheets Jankowski Comparison/Christine 14Novimg002.jpg", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/ecd.txt", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/fid.txt", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/tcd.txt", sep = "/"))
file.copy(from=filestocopy, to=targetdir,
overwrite = recursive, recursive = FALSE,
copy.mode = TRUE)
file.copy(from=filestocopy, to=targetdir,
copy.mode = TRUE)
# raw GC data
origindir <- c("~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/GC-Data-RawFolders/2014 10 Nov Jankowski Comparison")
filestocopy <- c(paste(origindir, "Run Sheets Jankowski Comparison/Christine 14Novimg001.jpg", sep = "/"),
paste(origindir, "Run Sheets Jankowski Comparison/Christine14Novimg002.jpg", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/ecd.txt", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/fid.txt", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/tcd.txt", sep = "/"))
file.copy(from=filestocopy, to=targetdir, copy.mode = TRUE)
targetdir <- c("~/Documents/GITHUB/cso011code_TanguroN2OLosses/Sensitivity-Experiments/UMN-vs-CENA-Test/InfoForJankowskiComparison/Raw-GC-Data/")
# raw GC data
origindir <- c("~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/GC-Data-RawFolders/2014 10 Nov Jankowski Comparison")
filestocopy <- c(paste(origindir, "Run Sheets Jankowski Comparison/Christine 14Novimg001.jpg", sep = "/"),
paste(origindir, "Run Sheets Jankowski Comparison/Christine14Novimg002.jpg", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/ecd.txt", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/fid.txt", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/tcd.txt", sep = "/"))
file.copy(from=filestocopy, to=targetdir, copy.mode = TRUE)
origindir <- c("~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/GC-Data-Rprocessed")
filestocopy <- c(paste(origindir, "ambinfoDF_20141201_JankowskiA.csv", sep = "/"),
paste(origindir, "ambinfoDF_20141201_JankowskiB.csv", sep = "/"),
paste(origindir, "timezeroDF_20141201_JankowskiA.csv", sep = "/"),
paste(origindir, "timezeroDF_20141201_JankowskiB.csv", sep = "/"),
paste(origindir, "vialDF_20141201_JankowskiA.csv", sep = "/"),
paste(origindir, "vialDF_20141201_JankowskiB.csv", sep = "/"),
paste(origindir, "warnings_20141201_JankowskiA.csv", sep = "/"),
paste(origindir, "warnings_20141201_JankowskiB.csv", sep = "/"))
file.copy(from=filestocopy, to=targetdir, copy.mode = TRUE)
# prep-jankowski-comparison-files.R
# get everything together to send on to KathiJo, Chris and Eric re: comparison the O'Connell and Jankowski methods
# disrupted N project
# CS O'Connell, UMN EEB/IonE
########################################################################
# COPY FILES THAT KATHIJO MIGHT WANT INTO A FOLDER FOR HER
# copy everything to folder for KathiJo
# raw GC data
targetdir <- c("~/Documents/GITHUB/cso011code_TanguroN2OLosses/Sensitivity-Experiments/UMN-vs-CENA-Test/InfoForJankowskiComparison/Raw-GC-Data/")
origindir <- c("~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/GC-Data-RawFolders/2014 10 Nov Jankowski Comparison")
filestocopy <- c(paste(origindir, "Run Sheets Jankowski Comparison/Christine 14Novimg001.jpg", sep = "/"),
paste(origindir, "Run Sheets Jankowski Comparison/Christine14Novimg002.jpg", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/ecd.txt", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/fid.txt", sep = "/"),
paste(origindir, "Runs Jankowski Comparison/tcd.txt", sep = "/"))
file.copy(from=filestocopy, to=targetdir, copy.mode = TRUE)
# vial processing (processing GC data)
targetdir <- c("~/Documents/GITHUB/cso011code_TanguroN2OLosses/Sensitivity-Experiments/UMN-vs-CENA-Test/InfoForJankowskiComparison/Vial-Processing/")
origindir <- c("~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/GC-Data-Rprocessed")
filestocopy <- c(paste(origindir, "ambinfoDF_20141201_JankowskiA.csv", sep = "/"),
paste(origindir, "ambinfoDF_20141201_JankowskiB.csv", sep = "/"),
paste(origindir, "timezeroDF_20141201_JankowskiA.csv", sep = "/"),
paste(origindir, "timezeroDF_20141201_JankowskiB.csv", sep = "/"),
paste(origindir, "vialDF_20141201_JankowskiA.csv", sep = "/"),
paste(origindir, "vialDF_20141201_JankowskiB.csv", sep = "/"),
paste(origindir, "warnings_20141201_JankowskiA.csv", sep = "/"),
paste(origindir, "warnings_20141201_JankowskiB.csv", sep = "/"))
file.copy(from=filestocopy, to=targetdir, copy.mode = TRUE)
# descriptive files (rusheets and field notebook scan)
targetdir <- c("~/Documents/GITHUB/cso011code_TanguroN2OLosses/Sensitivity-Experiments/UMN-vs-CENA-Test/InfoForJankowskiComparison/")
filestocopy <- c("~/Desktop/RESEARCH PROJECTS/cso011_TanguroN2OLosses/fieldnotebook_2014novtrip_wetseason_notebookpartial_tanguro.pdf",
"~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/GC-Data-standardizedfilenames/runsheets-standardizedfilenames/runsheet_20141201_JankowskiA.xlsx",
"~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/GC-Data-standardizedfilenames/runsheets-standardizedfilenames/runsheet_20141201_JankowskiB.xlsx")
file.copy(from=filestocopy, to=targetdir, copy.mode = TRUE)
fluxesfull <- read.csv("~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/Flux-Data-Rprocessed/fluxesfull.csv", stringsAsFactors=FALSE)
View(fluxesfull)
leakagetestvials <- subset(fluxesfull, SampleDate>"2014.11.01")
View(leakagetestvials)
View(leakagetestvials)
# fluxesfull.csv
fluxesfull <- read.csv("~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/Flux-Data-Rprocessed/fluxesfull.csv", stringsAsFactors=FALSE)
# subset out the leakage study vials
fluxes2014Nov <- subset(fluxesfull, SampleDate>"2014.11.01")
fluxes2014Nov$Site <- gsub("SM","S3", fluxes2014Nov$Site, fixed=TRUE)
fluxes2014Nov$Site <- gsub("SD","S2", fluxes2014Nov$Site, fixed=TRUE)
View(fluxes2014Nov)
# fluxesfull.csv
fluxesfull <- read.csv("~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/Flux-Data-Rprocessed/fluxesfull.csv", stringsAsFactors=FALSE)
# subset out the leakage study vials
fluxes2014Nov <- subset(fluxesfull, SampleDate>"2014.11.01")
fluxes2014Nov$Site <- gsub("SM","S3", fluxes2014Nov$Site, fixed=TRUE) # fix Christine shorthand labeling
fluxes2014Nov$Site <- gsub("SD","S2", fluxes2014Nov$Site, fixed=TRUE) # fix Christine shorthand labeling
# save as csv
pathsavefiles = "~/Documents/GITHUB/cso011code_TanguroN2OLosses/Sensitivity-Experiments/UMN-vs-CENA-Test/InfoForJankowskiComparison/"
write.csv(fluxes2014Nov, file=paste(pathsavefiles, "fluxes2014Nov.csv", sep = ""), row.names=FALSE)
mastersheet <- read.csv("~/Documents/GITHUB/cso011code_TanguroN2OLosses/Tanguro-MasterDataSheet.csv", stringsAsFactors=FALSE)
View(mastersheet)
mastersheet <- read.csv("~/Documents/GITHUB/cso011code_TanguroN2OLosses/Tanguro-MasterDataSheet.csv", stringsAsFactors=FALSE)
# subset out the leakage study vials
mastersheet2014Nov <- subset(mastersheet, SampleDate>"2014.11.01")
mastersheet2014Nov$Site <- gsub("SM","S3", mastersheet2014Nov$Site, fixed=TRUE) # fix Christine shorthand labeling
mastersheet2014Nov$Site <- gsub("SD","S2", mastersheet2014Nov$Site, fixed=TRUE) # fix Christine shorthand labeling
# save as csv
pathsavefiles = "~/Documents/GITHUB/cso011code_TanguroN2OLosses/Sensitivity-Experiments/UMN-vs-CENA-Test/InfoForJankowskiComparison/"
write.csv(mastersheet2014Nov, file=paste(pathsavefiles, "mastersheet2014Nov.csv", sep = ""), row.names=FALSE)
getwd()
dir()
?source
sessionInfo()
sessionInfo()
R.version.string
install.packages("swirl")
library(swirl)
swirl()
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1, 9, 3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_div
1:20
pi:10
15:1
?:
?':'
sqe(1,20)
seq(1,20)
seq(0, 10, by=0.5)
my_seq<-seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
# bye() or ESC to exit swirl
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
?vector
x<-4
class(x)
quizdata <- read.csv("~/Desktop/Coursework and Resources/Coursework - Yr 5/Coursera - 02 R Programming/hw1_data.csv", stringsAsFactors=FALSE)
quizdata
header(quizdata)
head(quizdata)
?complete.cases
x <- c(1,2,NA,4)
y <- c("a","b",NA,"d")
good <- complete.cases(x,y)
good
x <- c(1,2,NA,4)
y <- c("a","b","c",NA)
good <- complete.cases(x,y)
good
x[good]
x <- c(1,2,NA,4)
y <- c("a","b","c",NA)
good <- complete.cases(x,y)
x[good]
View(quizdata)
head(quizdata)
dim(quizdata)
head(quizdata, n=2)
tail(quizdata, n=2)
quizdata$Ozone[47]
length(is.na(quizdata$Ozone))
sum(is.na(quizdata$Ozone))
is.na(quizdata$Ozone)
mean(na.omit(quizdata$Ozone))
mean(quizdata$Ozone)
help(subset)
leakagetestvials <- subset(quizdata, quizdata$Ozone > 31 & Temp >90)
subsetforquiz <- subset(quizdata, quizdata$Ozone > 31 & Temp >90)
subsetforquiz
mean(na.omit(subsetforquiz$Solar.R))
2^20
head(quizdata, n=2)
subsetforquiz2 <- subset(quizdata, quizdata$Month == 6)
subsetforquiz2
mean(na.omit(subsetforquiz2$Temp))
subsetforquiz3 <- subset(quizdata, quizdata$Month == 5)
subsetforquiz3
max(na.omit(subsetforquiz3$Ozone))
x <- 1:4
y <- 2:3
x+y
class(x+y)
class(x)
# Vial-Leakage-Test.R
# testing how much the vials leak over time, based on leakage test experiment done in collaboration done with the Venterea lab
# disrupted N project
# CS O'Connell, UMN EEB/IonE
########################################################################
# BRING IN DATA, MAKE DATAFRAME
# go to vialdffull
vialdffull <- read.csv("~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/GC-Data-Rprocessed/vialDFfull.csv", stringsAsFactors=FALSE)
# subset out the leakage study vials
leakagetestvials <- subset(vialdffull, grepl("Leak", GCrun))
# save as csv
pathsavefiles = "~/Documents/GITHUB/cso011code_TanguroN2OLosses/Sensitivity-Experiments/Vial-Leakage-Test/"
write.csv(leakagetestvials, file=paste(pathsavefiles, "leakagetestvials.csv", sep = ""), row.names=FALSE)
View(leakagetestvials)
require(plyr)
se <- function(x) sd(x,na.rm=TRUE)/sqrt(length(na.omit(x)))
# ddply for summarizing/subsetting
leakagetestsummary <- ddply(leakagetestvials, .(GCrun, SampleName), summarize,
mean = mean(ngN_cm3_N2O),
sd = sd(ngN_cm3_N2O),
se = se(ngN_cm3_N2O),
n = length(ngN_cm3_N2O),
SampleDate = unique(SampleDate))
# add column that meakes it easier to label figures
leakagetestsummary <- transform(leakagetestsummary,
LeakageTime = ifelse(GCrun=="20140606_Leak0", as.character("Leakage Test Week 0"),
ifelse(GCrun=="20140613_Leak1", as.character("Leakage Test Week 1"),
ifelse(GCrun=="20140701_Leak4", as.character("Leakage Test Week 4"),
ifelse(GCrun=="20140806_Leak8", as.character("Leakage Test Week 8"),
as.character("Leakage Test Week 12"))))))
# time since day leakage test vials were filled (2014.06.05)
# date started leakage experiment
leakagetestsummary <- transform(leakagetestsummary,
daterun = ifelse(GCrun=="20140606_Leak0", as.character("2014.06.06"),
ifelse(GCrun=="20140613_Leak1", as.character("2014.06.13"),
ifelse(GCrun=="20140701_Leak4", as.character("2014.07.02"),
ifelse(GCrun=="20140806_Leak8", as.character("2014.08.06"),
as.character("2014.09.05"))))))
leakagetestsummary$daterun <- gsub("[.]","/",leakagetestsummary$daterun)
leakagetestsummary$daterun <- as.Date(leakagetestsummary$daterun, format="%Y/%m/%d")
# reformat date of GC run
leakagetestsummary$SampleDate <- gsub("[.]","/",leakagetestsummary$SampleDate)
leakagetestsummary$SampleDate <- as.Date(leakagetestsummary$SampleDate, format="%Y/%m/%d")
# days since start
leakagetestsummary$datediff <- leakagetestsummary$daterun - leakagetestsummary$SampleDate
# capped by hand or capped with auto crimper?
AUrows <- grepl("^AU", leakagetestsummary$SampleName)
leakagetestsummary <- transform(leakagetestsummary, crimpstyle = ifelse(AUrows==TRUE, as.character("auto"), as.character("hand")))
pathsavefiles = "~/Documents/GITHUB/cso011code_TanguroN2OLosses/Sensitivity-Experiments/Vial-Leakage-Test/"
write.csv(leakagetestsummary, file=paste(pathsavefiles, "leakagetestsummary.csv", sep = ""), row.names=FALSE)
df <- ToothGrowth
library(ggplot2)
head(dfc)
head(df)
dfc <- summarySE(df, measurevar="len", groupvars=c("supp","dose"))
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
conf.interval=.95, .drop=TRUE) {
require(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
# Rename the "mean" column
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
df <- ToothGrowth
dfc <- summarySE(df, measurevar="len", groupvars=c("supp","dose"))
library(ggplot2)
head(df)
head(dfc)
dfc
dfc2 <- dfc
dfc2$dose <- factor(dfc2$dose)
ggplot(dfc2, aes(x=dose, y=len, fill=supp)) +
geom_bar(position=position_dodge(), stat="identity")
View(leakagetestsummary)
head(leakagetestvials)
dtc <- summarySE(leakagetestvials, measurevar=c("N2Oppm","CO2ppm"), groupvars=c("GCrun","SampleName"))
dtc <- summarySE(leakagetestvials, measurevar="N2Oppm", groupvars=c("GCrun","SampleName"))
dtc <- summarySE(leakagetestvials, measurevar="N2Oppm", groupvars=c("GCrun","SampleName"), na.rm=TRUE)
dtc
dtc2 <- dtc
dtc2$GCrun <- factor(dtc2$GCrun)
dtc2 <- dtc
dtc2$GCrun <- factor(dtc2$GCrun)
# Error bars represent standard error of the mean
ggplot(dfc2, aes(x=GCrun, y=N2Oppm, fill=SampleName)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=N2Oppm-se, ymax=N2Oppm+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
# Error bars represent standard error of the mean
ggplot(dtc2, aes(x=GCrun, y=N2Oppm, fill=SampleName)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=N2Oppm-se, ymax=N2Oppm+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
require(ggmap)
data(hadley)
ggimage(hadley)
install.pakcages("ggmap")
install.packages("ggmap")
require(ggmap)
data(hadley)
ggimage(hadley)
