View(outputdffull)
outputdffull <- rbind(outputdffull, outputdf)
View(outputdffull)
# SiteSummaryStatsTanguro-Rcode.R
# taking flux data and doing something with it
# disrupted N project
# CS O'Connell, UMN EEB/IonE
########################################################################
# BRING IN DATA, MAKE DATAFRAME
fluxesfull <- read.csv("~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/Flux-Data-Rprocessed/fluxesfull.csv", stringsAsFactors=FALSE)
dim(fluxesfull)[1]/2 # sample size of chambers (div by two because each chamber has a CO2 and N2O row)
########################################################################
# DATA QUALITY: R^2 INFO
LinearR2_N2O <- fluxesfull$LinearR2[(fluxesfull$GasType)=="N2O"]
QuadR2_N2O <- fluxesfull$QuadR2[(fluxesfull$GasType)=="N2O"]
LinearR2_CO2 <- fluxesfull$LinearR2[(fluxesfull$GasType)=="CO2"]
QuadR2_CO2 <- fluxesfull$QuadR2[(fluxesfull$GasType)=="CO2"]
## histograms of CO2 and N2O R^2 values
par(mfrow=c(2,2),oma=c(0,0,2,0),mar = c(5.1, 4.1, 2.1, 2.1))
hist(LinearR2_N2O, main="")
hist(QuadR2_N2O, main="")
hist(LinearR2_CO2, main="")
hist(QuadR2_CO2, main="")
title(expression("R"^2*" Histograms"), outer=TRUE)
## correlation between the CO2 and N2O R^2 values
# correlation info
cor1t <- cor.test(LinearR2_CO2,LinearR2_N2O)
cor2t <- cor.test(QuadR2_CO2,QuadR2_N2O)
cor_stars <- numeric(length=2)
# cycle through to set number of stars
for (i in 1:2 ) {
corpval <- paste("cor",i,"t$p.value",sep="")
if(eval(parse(text=corpval)) < 0.001){
cor_stars[i] <- "***"
} else if(eval(parse(text=corpval)) < 0.01){
cor_stars[i] <- "**"
} else if(eval(parse(text=corpval)) < 0.05){
cor_stars[i] <- "*"
} else {
cor_stars[i] <- " "
}
}
# to make abline
r2linearlm <- lm(LinearR2_N2O ~ LinearR2_CO2)
r2quadlm <- lm(QuadR2_N2O ~ QuadR2_CO2)
# make plot
par(mfrow=c(1,2),oma=c(0,0,2,0),mar = c(5.1, 4.1, 2.1, 2.1))
#plot1
plot(LinearR2_CO2,LinearR2_N2O)
abline(r2linearlm)
legend('topleft', legend = paste("ρ =", round(cor1t$estimate,4), cor_stars[1]), bty = 'n')
#plot2
plot(QuadR2_CO2,QuadR2_N2O)
abline(r2quadlm)
legend('topleft', legend = paste("ρ =", round(cor2t$estimate,4), cor_stars[2]), bty = 'n')
#### save these
########################################################################
# SITE SUMMARY
# include cut off in R2 values when making a summary
# Which flux to use?
# Generally Rod thinks the quadratic fit makes more sense (based on theory), but if the second derivative is positive (meaning the fit is accelerating up), then use the linear fit
# This gets "linked" into a summary excel doc that brings in all of the different summary sheets from all the excel files for each date of sampling
# for now, let's just use the quadratic fluxes
## list of every site
fluxesfull$easysitename <- do.call(paste, c(fluxesfull[c("Site", "SampleDate")], sep = "_"))
sitesummarylist <- unique(fluxesfull$easysitename)
length(sitesummarylist)
## pre-start output df
outputdffull <- data.frame()
for (i in 1:length(sitesummarylist)) {
## get each site id
sitehere <- sitesummarylist[i]
## get linear flux info
# eventually make this an ifelse system where if the second derivative is positive (meaning the fit is accelerating up), then use the linear fit
# perhaps also use ifelse to make sure that the R^2 for whatever fit you use is acceptable
meanfluxN2Ol <- mean(fluxesfull$LinearFlux[(fluxesfull$easysitename)==sitehere & (fluxesfull$GasType)=="N2O"])
meanfluxCO2l <- mean(fluxesfull$LinearFlux[(fluxesfull$easysitename)==sitehere & (fluxesfull$GasType)=="CO2"])
sdfluxN2Ol <- sd(fluxesfull$LinearFlux[(fluxesfull$easysitename)==sitehere & (fluxesfull$GasType)=="N2O"])
sdfluxCO2l <- sd(fluxesfull$LinearFlux[(fluxesfull$easysitename)==sitehere & (fluxesfull$GasType)=="CO2"])
meanR2N2Ol <- mean(fluxesfull$LinearR2[(fluxesfull$easysitename)==sitehere & (fluxesfull$GasType)=="N2O"])
meanR2CO2l <- mean(fluxesfull$LinearR2[(fluxesfull$easysitename)==sitehere & (fluxesfull$GasType)=="CO2"])
sdR2N2Ol <- sd(fluxesfull$LinearR2[(fluxesfull$easysitename)==sitehere & (fluxesfull$GasType)=="N2O"])
sdR2CO2l <- sd(fluxesfull$LinearR2[(fluxesfull$easysitename)==sitehere & (fluxesfull$GasType)=="CO2"])
SampleDate <- unique(fluxesfull$SampleDate[(fluxesfull$easysitename)==sitehere])
LUtype <- unique(fluxesfull$LUtype[(fluxesfull$easysitename)==sitehere])
Site <- unique(fluxesfull$Site[(fluxesfull$easysitename)==sitehere])
outputdf <- data.frame(sitehere,SampleDate,Site,LUtype,meanfluxN2Ol,sdfluxN2Ol,meanR2N2Ol,sdR2N2Ol,meanfluxCO2l,sdfluxCO2l,meanR2CO2l,sdR2CO2l)
#   # bind onto output table
#   outputdffull <- rbind(outputdffull, outputdf)
#
#
#
## get quad flux info
# eventually make this an ifelse system where if the second derivative is positive (meaning the fit is accelerating up), then use the linear fit
# perhaps also use ifelse to make sure that the R^2 for whatever fit you use is acceptable
meanfluxN2Oq <- mean(fluxesfull$QuadFlux[(fluxesfull$easysitename)==sitehere & (fluxesfull$GasType)=="N2O"])
meanfluxCO2q <- mean(fluxesfull$QuadFlux[(fluxesfull$easysitename)==sitehere & (fluxesfull$GasType)=="CO2"])
sdfluxN2Oq <- sd(fluxesfull$QuadFlux[(fluxesfull$easysitename)==sitehere & (fluxesfull$GasType)=="N2O"])
sdfluxCO2q <- sd(fluxesfull$QuadFlux[(fluxesfull$easysitename)==sitehere & (fluxesfull$GasType)=="CO2"])
meanR2N2Oq <- mean(fluxesfull$QuadR2[(fluxesfull$easysitename)==sitehere & (fluxesfull$GasType)=="N2O"])
meanR2CO2q <- mean(fluxesfull$QuadR2[(fluxesfull$easysitename)==sitehere & (fluxesfull$GasType)=="CO2"])
sdR2N2Oq <- sd(fluxesfull$QuadR2[(fluxesfull$easysitename)==sitehere & (fluxesfull$GasType)=="N2O"])
sdR2CO2q <- sd(fluxesfull$QuadR2[(fluxesfull$easysitename)==sitehere & (fluxesfull$GasType)=="CO2"])
SampleDate <- unique(fluxesfull$SampleDate[(fluxesfull$easysitename)==sitehere])
LUtype <- unique(fluxesfull$LUtype[(fluxesfull$easysitename)==sitehere])
Site <- unique(fluxesfull$Site[(fluxesfull$easysitename)==sitehere])
outputdfcbind <- data.frame(meanfluxN2Oq,sdfluxN2Oq,meanR2N2Oq,sdR2N2Oq,meanfluxCO2q,sdfluxCO2q,meanR2CO2q,sdR2CO2q)
# bind linear and quad flux info into one row
outputdf <- cbind(outputdf, outputdfcbind)
# bind onto output table
outputdffull <- rbind(outputdffull, outputdf)
}
pathsavefiles = "~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/Flux-Data-Rprocessed/"
# SEE LOOP ABOVE - RIGHT NOW THIS IS QUAD ONLY
write.csv(outputdffull, file=paste(pathsavefiles, "fluxessitesummary.csv", sep = ""), row.names=FALSE)
write.csv(outputdffull, file=paste(pathsavefiles, "fluxessitesummary.csv", sep = ""), row.names=FALSE)
fluxessitesummary <- read.csv("~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/Flux-Data-Rprocessed/fluxessitesummary.csv", stringsAsFactors=FALSE)
# create a col to assign a color in the graphs
fluxessitesummary <- transform(fluxessitesummary,
color.use = ifelse(LUtype=="M",
as.character("darkorange"),
ifelse(LUtype=="F",
as.character("darkgreen"),
as.character("darkblue"))))
# create a col to assign a better name to each land use
fluxessitesummary <- transform(fluxessitesummary,
LUname = ifelse(LUtype=="M",
as.character("Soya/Maize DC"),
ifelse(LUtype=="F",
as.character("Forest"),
as.character("Soya SC"))))
## summary by site and date to df
fluxessitesummary$SampleDate2 <- as.Date(fluxessitesummary$SampleDate, "%m/%d/%Y")
# grouped by land use type
plot(fluxessitesummary$SampleDate2[fluxessitesummary$LUtype=="S"], fluxessitesummary$meanfluxN2Oq[fluxessitesummary$LUtype=="S"],ylim=c(-5,10),col="darkblue",xlab="Date", ylab="ngN/cm2/hr")
points(fluxessitesummary$SampleDate2[fluxessitesummary$LUtype=="M"], fluxessitesummary$meanfluxN2Oq[fluxessitesummary$LUtype=="M"],col="darkorange")
points(fluxessitesummary$SampleDate2[fluxessitesummary$LUtype=="F"], fluxessitesummary$meanfluxN2Oq[fluxessitesummary$LUtype=="F"],col="darkgreen")
plot(fluxessitesummary$SampleDate2[fluxessitesummary$LUtype=="S"], fluxessitesummary$meanfluxN2Oq[fluxessitesummary$LUtype=="S"],ylim=c(-5,10),col="darkblue",xlab="Date", ylab="ngN/cm2/hr")
fluxessitesummary$SampleDate2 <- as.Date(fluxessitesummary$SampleDate, "%m/%d/%Y")
plot(fluxessitesummary$SampleDate2[fluxessitesummary$LUtype=="S"], fluxessitesummary$meanfluxN2Oq[fluxessitesummary$LUtype=="S"],ylim=c(-5,10),col="darkblue",xlab="Date", ylab="ngN/cm2/hr")
View(fluxessitesummary)
gsub("[.]","/",fluxessitesummary$SampleDate)
fluxessitesummary$SampleDate2 <- gsub("[.]","/",fluxessitesummary$SampleDate)
fluxessitesummary$SampleDate2 <- as.Date(fluxessitesummary$SampleDate, "%Y/%m/%d")
fluxessitesummary$SampleDate2 <- gsub("[.]","/",fluxessitesummary$SampleDate)
fluxessitesummary$SampleDate2 <- as.Date(fluxessitesummary$SampleDate, "%Y/%m/%d")
View(fluxessitesummary)
gsub("[.]","/",fluxessitesummary$SampleDate)
fluxessitesummary$SampleDate2 <- gsub("[.]","/",fluxessitesummary$SampleDate)
View(fluxessitesummary)
help(as.Date)
fluxessitesummary$SampleDate2 <- as.Date(fluxessitesummary$SampleDate, format="%Y/%m/%d")
View(fluxessitesummary)
fluxessitesummary$SampleDate2 <- as.Date(fluxessitesummary$SampleDate2, format="%Y/%m/%d")
View(fluxessitesummary)
fluxessitesummary$SampleDate2 <- gsub("[.]","/",fluxessitesummary$SampleDate)
fluxessitesummary$SampleDate3 <- as.Date(fluxessitesummary$SampleDate2, format="%Y/%m/%d")
View(fluxessitesummary)
fluxessitesummary$SampleDate2 <- gsub("[.]","/",fluxessitesummary$SampleDate)
fluxessitesummary$SampleDate2 <- as.Date(fluxessitesummary$SampleDate2, format="%Y/%m/%d")
View(fluxessitesummary)
fluxessitesummary <- read.csv("~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/Flux-Data-Rprocessed/fluxessitesummary.csv", stringsAsFactors=FALSE)
# create a col to assign a color in the graphs
fluxessitesummary <- transform(fluxessitesummary,
color.use = ifelse(LUtype=="M",
as.character("darkorange"),
ifelse(LUtype=="F",
as.character("darkgreen"),
as.character("darkblue"))))
# create a col to assign a better name to each land use
fluxessitesummary <- transform(fluxessitesummary,
LUname = ifelse(LUtype=="M",
as.character("Soya/Maize DC"),
ifelse(LUtype=="F",
as.character("Forest"),
as.character("Soya SC"))))
plot(fluxessitesummary$SampleDate2[fluxessitesummary$LUtype=="S"], fluxessitesummary$meanfluxN2Oq[fluxessitesummary$LUtype=="S"],ylim=c(-5,10),col="darkblue",xlab="Date", ylab="ngN/cm2/hr")
# SiteSummaryStatsTanguro-initialfigs.R
# initial site data to figures
# disrupted N project
# CS O'Connell, UMN EEB/IonE
########################################################################
# BRING IN DATA / PREP
fluxessitesummary <- read.csv("~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/Flux-Data-Rprocessed/fluxessitesummary.csv", stringsAsFactors=FALSE)
# create a col to assign a color in the graphs
fluxessitesummary <- transform(fluxessitesummary, color.use = ifelse(LUtype=="M", as.character("darkorange"), ifelse(LUtype=="F", as.character("darkgreen"), as.character("darkblue"))))
# create a col to assign a better name to each land use
fluxessitesummary <- transform(fluxessitesummary, LUname = ifelse(LUtype=="M", as.character("Soya/Maize DC"), ifelse(LUtype=="F", as.character("Forest"), as.character("Soya SC"))))
# summary by site and date to df so R likes it
fluxessitesummary$SampleDate2 <- gsub("[.]","/",fluxessitesummary$SampleDate)
fluxessitesummary$SampleDate2 <- as.Date(fluxessitesummary$SampleDate2, format="%Y/%m/%d")
plot(fluxessitesummary$SampleDate2[fluxessitesummary$LUtype=="S"], fluxessitesummary$meanfluxN2Oq[fluxessitesummary$LUtype=="S"],ylim=c(-5,10),col="darkblue",xlab="Date", ylab="ngN/cm2/hr")
points(fluxessitesummary$SampleDate2[fluxessitesummary$LUtype=="M"], fluxessitesummary$meanfluxN2Oq[fluxessitesummary$LUtype=="M"],col="darkorange")
points(fluxessitesummary$SampleDate2[fluxessitesummary$LUtype=="F"], fluxessitesummary$meanfluxN2Oq[fluxessitesummary$LUtype=="F"],col="darkgreen")
plot(fluxessitesummary$SampleDate2[fluxessitesummary$LUtype=="S"], fluxessitesummary$meanfluxN2Oq[fluxessitesummary$LUtype=="S"],ylim=c(-5,10),col="darkblue",xlab="Date", ylab="ngN/cm2/hr")
points(fluxessitesummary$SampleDate2[fluxessitesummary$LUtype=="M"], fluxessitesummary$meanfluxN2Oq[fluxessitesummary$LUtype=="M"],col="darkorange")
points(fluxessitesummary$SampleDate2[fluxessitesummary$LUtype=="F"], fluxessitesummary$meanfluxN2Oq[fluxessitesummary$LUtype=="F"],col="darkgreen")
# facet by site
require(ggplot2)
sp <- ggplot(fluxessitesummary, aes(x=SampleDate2, y=meanfluxN2Oq, color=color.use)) + geom_point(size=2.5)
sp + facet_wrap( ~ LUname, ncol=3) + geom_smooth(size = 1.5, fill="#333333", colour="black")
sp2
sp <- ggplot(fluxessitesummary, aes(x=SampleDate2, y=meanfluxN2Oq, color=color.use)) + geom_point(size=2.5)
sp2 <- sp + facet_wrap( ~ LUname, ncol=3)
sp2
sp2 + geom_smooth(size = 1.5, fill="#333333", colour="black")
y1<-1+rnorm(10)/5
y2<-3+rnorm(10)/5
y3<-4+rnorm(10)/5
y4<-397+rnorm(10)/5
library(plotrix)
plot(y1,ylim=c(0,10),axes=FALSE,main="Big range plot",ylab="Y values") points(y2)
points(y3)
box()
axis(2,at=c(1,2,3,4,6,7,8,9),labels=c("1","2","3","4","396","397","398","399")) axis.break(2,5)
par(new=TRUE)
plot(y4,ylim=c(390,400),axes=FALSE,main="",ylab="",xlab="")
install.packages("plotrix")
y1<-1+rnorm(10)/5
y2<-3+rnorm(10)/5
y3<-4+rnorm(10)/5
y4<-397+rnorm(10)/5
library(plotrix)
plot(y1,ylim=c(0,10),axes=FALSE,main="Big range plot",ylab="Y values") points(y2)
points(y3)
box()
axis(2,at=c(1,2,3,4,6,7,8,9),labels=c("1","2","3","4","396","397","398","399")) axis.break(2,5)
par(new=TRUE)
plot(y4,ylim=c(390,400),axes=FALSE,main="",ylab="",xlab="")
y1<-1+rnorm(10)/5
y2<-3+rnorm(10)/5
y3<-4+rnorm(10)/5
y4<-397+rnorm(10)/5
library(plotrix)
plot(y1,ylim=c(0,10),axes=FALSE,main="Big range plot",ylab="Y values") points(y2)
plot(y1,ylim=c(0,10),axes=FALSE,main="Big range plot",ylab="Y values")
points(y2)
points(y3)
box()
axis(2,at=c(1,2,3,4,6,7,8,9),labels=c("1","2","3","4","396","397","398","399")) axis.break(2,5)
axis(2,at=c(1,2,3,4,6,7,8,9),labels=c("1","2","3","4","396","397","398","399"))
axis.break(2,5)
par(new=TRUE)
plot(y4,ylim=c(390,400),axes=FALSE,main="",ylab="",xlab="")
x <- c(9.45, 8.78, 0.93, 0.47, 0.24, 0.12)
y <- c(10.72, 10.56, 10.35, 10.10, 9.13, 6.72)
z <- c(7.578, 7.456, 6.956, 6.712, 4.832, 3.345)
library(plotrix)
par(bty="n") # deleting the box
gap.plot(x,y, gap=c(2,7.5), gap.axis="x", pch=16,
col="blue", ylim=range(c(y,z)),
xtics=c(0:3,8:10), xticlab=c(0:3,8:10))
gap.plot(x,z, gap=c(2,7.5), gap.axis="x", pch=17,
col="red", ylim=range(c(y,z)), add=TRUE); axis(2)
abline(v=seq(1.99,2.09,.001), col="white")  # hiding vertical lines
axis.break(1,2,style="slash")               # plotting slashes for breakpoints
library(plotrix)
par(bty="n") # deleting the box
gap.plot(x,y, gap=c(1.5,7.5), gap.axis="x", pch=16,
col="blue", ylim=range(c(y,z)),
xtics=c(0:3,8:10), xticlab=c(0:3,8:10))
gap.plot(x,z, gap=c(2,7.5), gap.axis="x", pch=17,
col="red", ylim=range(c(y,z)), add=TRUE); axis(2)
abline(v=seq(1.99,2.09,.001), col="white")  # hiding vertical lines
axis.break(1,2,style="slash")               # plotting slashes for breakpoints
abline(v=seq(1.49,2.09,.001), col="white")  # hiding vertical lines
axis.break(1,2,style="slash")               # plotting slashes for breakpoints
par(bty="n") # deleting the box
gap.plot(x,y, gap=c(1.5,7.5), gap.axis="x", pch=16,
col="blue", ylim=range(c(y,z)),
xtics=c(0:3,8:10), xticlab=c(0:3,8:10))
gap.plot(x,z, gap=c(2,7.5), gap.axis="x", pch=17,
col="red", ylim=range(c(y,z)), add=TRUE); axis(2)
abline(v=seq(1.49,2.09,.001), col="white")  # hiding vertical lines
axis.break(1,2,style="slash")
gap.plot(x,z, gap=c(2,7.5), gap.axis="x", pch=17,
col="red", ylim=range(c(y,z)), add=TRUE); axis(2)
par(bty="n") # deleting the box
gap.plot(x,y, gap=c(1.5,7.5), gap.axis="x", pch=16,
col="blue", ylim=range(c(y,z)),
xtics=c(0:3,8:10), xticlab=c(0:3,8:10))
gap.plot(x,z, gap=c(2,7.5), gap.axis="x", pch=17,
col="red", ylim=range(c(y,z)), add=TRUE); axis(2)
abline(v=seq(1.49,2.09,.001), col="white")  # hiding vertical lines
axis.break(1,2,style="slash")               # plotting slashes for breakpoints
axis.break(1,1.5,style="slash")               # plotting slashes for breakpoints
par(bty="n") # deleting the box
gap.plot(x,y, gap=c(1.5,7.5), gap.axis="x", pch=16,
col="blue", ylim=range(c(y,z)),
xtics=c(0:3,8:10), xticlab=c(0:3,8:10))
gap.plot(x,z, gap=c(2,7.5), gap.axis="x", pch=17,
col="red", ylim=range(c(y,z)), add=TRUE); axis(2)
abline(v=seq(1.49,2.09,.001), col="white")  # hiding vertical lines
axis.break(1,1.5,style="slash")               # plotting slashes for breakpoints
par(bty="n") # deleting the box
gap.plot(x,y, gap=c(1.5,7.5), gap.axis="x", pch=16,
col="blue", ylim=range(c(y,z)),
xtics=c(0:3,8:10), xticlab=c(0:3,8:10))
gap.plot(x,z, gap=c(1.5,7.5), gap.axis="x", pch=17,
col="red", ylim=range(c(y,z)), add=TRUE); axis(2)
abline(v=seq(1.49,2.09,.001), col="white")  # hiding vertical lines
axis.break(1,1.5,style="slash")               # plotting slashes for breakpoints
y1<-1+rnorm(10)/5
y2<-3+rnorm(10)/5
y3<-4+rnorm(10)/5
y4<-397+rnorm(10)/5
library(plotrix)
plot(y1,ylim=c(0,10),axes=FALSE,main="Big range plot",ylab="Y values")
points(y2)
points(y3)
box()
axis(2,at=c(1,2,3,4,6,7,8,9),labels=c("1","2","3","4","396","397","398","399"))
axis.break(2,5)
par(new=TRUE)
plot(y4,ylim=c(390,400),axes=FALSE,main="",ylab="",xlab="")
plot(fluxessitesummary$SampleDate2[fluxessitesummary$LUtype=="S"], fluxessitesummary$meanfluxN2Oq[fluxessitesummary$LUtype=="S"],ylim=c(-5,10),col="darkblue",xlab="Date", ylab="ngN/cm2/hr")
points(fluxessitesummary$SampleDate2[fluxessitesummary$LUtype=="M"], fluxessitesummary$meanfluxN2Oq[fluxessitesummary$LUtype=="M"],col="darkorange")
points(fluxessitesummary$SampleDate2[fluxessitesummary$LUtype=="F"], fluxessitesummary$meanfluxN2Oq[fluxessitesummary$LUtype=="F"],col="darkgreen")
# facet by site
require(ggplot2)
sp <- ggplot(fluxessitesummary, aes(x=SampleDate2, y=meanfluxN2Oq, color=color.use)) + geom_point(size=2.5)
sp2 <- sp + facet_wrap( ~ LUname, ncol=3)
# no loess
sp2
# yes loess
sp2 + geom_smooth(size = 1.5, fill="#333333", colour="black")
# take out dates without data
require(ggplot2)
sp <- ggplot(fluxessitesummary, aes(x=SampleDate2, y=meanfluxN2Ol, color=color.use)) + geom_point(size=2.5)
sp2 <- sp + facet_wrap( ~ LUname, ncol=3)
# no loess
sp2
sp2 + geom_smooth(size = 1.5, fill="#333333", colour="black")
sp <- ggplot(fluxessitesummary, aes(x=SampleDate2, y=meanfluxN2Ol, color=color.use)) + geom_point(size=2.5)
sp2 <- sp + facet_wrap( ~ LUname, ncol=3) + xlab("Sampling Date") + ylab("ngN/cm2/hr")
# no loess
sp2
sp2 + geom_smooth(size = 1.5, fill="#333333", colour="black")
p1 <- ggplot(fluxessitesummary, aes(x=SampleDate2, y=meanfluxN2Oq, color=color.use)) + geom_point(size=2.5) + facet_wrap( ~ LUname, ncol=3) + xlab("Sampling Date") + ylab("ngN/cm2/hr")
p1
p1loess <- p1 + geom_smooth(size = 1.5, fill="#333333", colour="black")
p1loess
p1 <- ggplot(fluxessitesummary, aes(x=SampleDate2, y=meanfluxN2Oq, color=color.use)) + geom_point(size=2.5) + facet_wrap( ~ LUname, ncol=3) + xlab("Sampling Date") + ylab("ngN/cm2/hr (quad fit)")
p1loess <- p1 + geom_smooth(size = 1.5, fill="#333333", colour="black")
p1
# quad - facet by site
p1 <- ggplot(fluxessitesummary, aes(x=SampleDate2, y=meanfluxN2Oq, color=color.use)) + geom_point(size=2.5) + facet_wrap( ~ LUname, ncol=3) + xlab("Sampling Date") + ylab("ngN/cm2/hr (quad fit)")
p1loess <- p1 + geom_smooth(size = 1.5, fill="#333333", colour="black")
# linear - facet by site
p2 <- ggplot(fluxessitesummary, aes(x=SampleDate2, y=meanfluxN2Ol, color=color.use)) + geom_point(size=2.5) + facet_wrap( ~ LUname, ncol=3) + xlab("Sampling Date") + ylab("ngN/cm2/hr (linear fit)")
p2loess <- p2 + geom_smooth(size = 1.5, fill="#333333", colour="black")
# quad - facet by site
p1n <- ggplot(fluxessitesummary, aes(x=SampleDate2, y=meanfluxN2Oq, color=color.use)) + geom_point(size=2.5) + facet_wrap( ~ LUname, ncol=3) + xlab("Sampling Date") + ylab("ngN/cm2/hr (quad fit)")
p1nloess <- p1n + geom_smooth(size = 1.5, fill="#333333", colour="black")
# linear - facet by site
p2n <- ggplot(fluxessitesummary, aes(x=SampleDate2, y=meanfluxN2Ol, color=color.use)) + geom_point(size=2.5) + facet_wrap( ~ LUname, ncol=3) + xlab("Sampling Date") + ylab("ngN/cm2/hr (linear fit)")
p2nloess <- p2n + geom_smooth(size = 1.5, fill="#333333", colour="black")
p1c <- ggplot(fluxessitesummary, aes(x=SampleDate2, y=meanfluxCO2q, color=color.use)) + geom_point(size=2.5) + facet_wrap( ~ LUname, ncol=3) + xlab("Sampling Date") + ylab("ngN/cm2/hr (quad fit)")
p1cloess <- p1c + geom_smooth(size = 1.5, fill="#333333", colour="black")
p1c
p1cloess
grid.arrange(p1n, p1c, nrow = 2, ncol = 1) # great, this works!  looks a little ugly, but this is the right thing and I'll play with the
require(gridExtra)
grid.arrange(p1n, p1c, nrow = 2, ncol = 1) # great, this works!  looks a little ugly, but this is the right thing and I'll play with the
p1c <- ggplot(fluxessitesummary, aes(x=SampleDate2, y=meanfluxCO2q, color=color.use)) + geom_point(size=2.5) + facet_wrap( ~ LUname, ncol=3) + xlab("Sampling Date") + ylab("ngC/cm2/hr (quad fit)")
p1cloess <- p1c + geom_smooth(size = 1.5, fill="#333333", colour="black")
p1c
grid.arrange(p1n, p1c, nrow = 2, ncol = 1) # great, this works!  looks a little ugly, but this is the right thing and I'll play with the
grid.arrange(p1n, p1c, nrow = 2, ncol = 1) # great, this works!  looks a little ugly, but this is the right thing and I'll play with the
grid.arrange(p1nloess, p1cloess, nrow = 2, ncol = 1) # great, this works!  looks a little ugly, but this is the right thing and I'll play with the
grid.arrange(p2n, p2c, nrow = 2, ncol = 1) # great, this works!  looks a little ugly, but this is the right thing and I'll play with the
p2n <- ggplot(fluxessitesummary, aes(x=SampleDate2, y=meanfluxN2Ol, color=color.use)) + geom_point(size=2.5) + facet_wrap( ~ LUname, ncol=3) + xlab("Sampling Date") + ylab("ngN/cm2/hr (linear fit)")
p2nloess <- p2n + geom_smooth(size = 1.5, fill="#333333", colour="black")
p2c <- ggplot(fluxessitesummary, aes(x=SampleDate2, y=meanfluxCO2l, color=color.use)) + geom_point(size=2.5) + facet_wrap( ~ LUname, ncol=3) + xlab("Sampling Date") + ylab("ngC/cm2/hr (linear fit)")
p2cloess <- p2c + geom_smooth(size = 1.5, fill="#333333", colour="black")
grid.arrange(p2n, p2c, nrow = 2, ncol = 1) # great, this works!  looks a little ugly, but this is the right thing and I'll play with the
grid.arrange(p2nloess, p2cloess, nrow = 2, ncol = 1) # great, this works!  looks a little ugly, but this is the right thing and I'll play with the
plot1 <- ggplot(fluxessitesummary, aes(x=SampleDate2, y=meanfluxN2Ol, color=color.use)) + geom_point(size=2.5) + facet_wrap( ~ LUname, ncol=3) + xlab("Sampling Date") + ylab("ngN/cm2/hr (linear fit)")
plot1
plot1 <- ggplot(fluxessitesummary, aes(x=SampleDate2, y=meanfluxN2Ol[fluxessitesummary$LUtype=="S"], color=color.use)) + geom_point(size=2.5)  + xlab("Sampling Date") + ylab("ngN/cm2/hr (linear fit)")
plot1
meanfluxN2Ol[fluxessitesummary$LUtype=="S"]
meanfluxN2Ol[fluxessitesummary$LUtype=="S"]
fluxessitesummary$meanfluxN2Ol[fluxessitesummary$LUtype=="S"]
plot1 <- ggplot(fluxessitesummary, aes(x=SampleDate2, y=fluxessitesummary$meanfluxN2Ol[fluxessitesummary$LUtype=="S"], color=color.use)) + geom_point(size=2.5)  + xlab("Sampling Date") + ylab("ngN/cm2/hr (linear fit)")
plot1
ytmp <- fluxessitesummary$meanfluxN2Ol[fluxessitesummary$LUtype=="S"]
plot1 <- ggplot(fluxessitesummary, aes(x=SampleDate2, y=ytmp, color=color.use)) + geom_point(size=2.5)  + xlab("Sampling Date") + ylab("ngN/cm2/hr (linear fit)")
plot1
xtmp <- fluxessitesummary$SampleDate2[fluxessitesummary$LUtype=="S"]
ytmp <- fluxessitesummary$meanfluxN2Ol[fluxessitesummary$LUtype=="S"]
plot1 <- ggplot(fluxessitesummary, aes(x=xtmp, y=ytmp, color=color.use)) + geom_point(size=2.5)  + xlab("Sampling Date") + ylab("ngN/cm2/hr (linear fit)")
plot1
xtmp
ytmp
plot(xtmp,ytmp)
xtmp <- fluxessitesummary$SampleDate2[fluxessitesummary$LUtype=="M"]
ytmp <- fluxessitesummary$meanfluxN2Ol[fluxessitesummary$LUtype=="M"]
plot(xtmp,ytmp)
xtmp <- fluxessitesummary$SampleDate2[fluxessitesummary$Site=="M1"]
ytmp <- fluxessitesummary$meanfluxN2Ol[fluxessitesummary$Site=="M1"]
plot(xtmp,ytmp)
p2n <- ggplot(fluxessitesummary, aes(x=SampleDate2, y=meanfluxN2Ol, color=color.use)) + geom_point(size=2.5) + facet_grid(Site ~ LUname, ncol=3) + xlab("Sampling Date") + ylab("ngN/cm2/hr (linear fit)")
p2n <- ggplot(fluxessitesummary, aes(x=SampleDate2, y=meanfluxN2Ol, color=color.use)) + geom_point(size=2.5) + facet_grid(Site ~ LUname) + xlab("Sampling Date") + ylab("ngN/cm2/hr (linear fit)")
p2n
p2n <- ggplot(fluxessitesummary, aes(x=SampleDate2, y=meanfluxN2Ol, color=color.use)) + geom_point(size=2.5) + facet_grid(Site ~ .) + xlab("Sampling Date") + ylab("ngN/cm2/hr (linear fit)")
p2n
subset(fluxessitesummary, LUtype %in% c("M")
)
plot_1 = ggplot(subset(fluxessitesummary, LUtype %in% c("M")), aes(x=SampleDate2, y=meanfluxN2Ol)) + geom_point(size=2.5) + facet_grid(Site ~ .)
plot_1
View(fluxessitesummary)
subset(fluxessitesummary, LUtype %in% c("M") & SampleDate2 > "2013/11/01")
plot_1 = ggplot(subset(fluxessitesummary, LUtype %in% c("M") & SampleDate2 > "2013/11/01"), aes(x=SampleDate2, y=meanfluxN2Ol)) + geom_point(size=2.5) + facet_grid(Site ~ .)
plot_1
plot_2 = ggplot(subset(fluxessitesummary, LUtype %in% c("S") & SampleDate2 > "2013/11/01"), aes(x=SampleDate2, y=meanfluxN2Ol)) + geom_point(size=2.5) + facet_grid(Site ~ .)
plot_2
plot_2 = ggplot(subset(fluxessitesummary, Site %in% c("SM") & SampleDate2 > "2013/11/01"), aes(x=SampleDate2, y=meanfluxN2Ol)) + geom_point(size=2.5)
plot_2
plot_1
pathsavefluxfigures = "~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/Flux-Data-Rprocessed/FluxAnalysis/"
help(png)
paste(pathsavefluxfigures, "ferteffects_possible.png", sep="")
png(file = paste(pathsavefluxfigures, "ferteffects_possible.png", sep=""),width=7,height=10,units="in",res=1200)
grid.arrange(plot_1, plot_2, nrow = 1, ncol = 2)
dev.off()
plot_1 = ggplot(subset(fluxessitesummary, LUtype %in% c("M") & SampleDate2 > "2013/11/01"), aes(x=SampleDate2, y=meanfluxN2Ol)) + geom_point(size=2.5) + facet_grid(. ~ Site)
plot_1
plot_2 = ggplot(subset(fluxessitesummary, Site %in% c("SM") & SampleDate2 > "2013/11/01"), aes(x=SampleDate2, y=meanfluxN2Ol)) + geom_point(size=2.5)
plot_2
png(file = paste(pathsavefluxfigures, "ferteffects_possible.png", sep=""),width=7,height=10,units="in",res=1200)
grid.arrange(plot_1, plot_2, nrow = 1, ncol = 2)
dev.off()
png(file = paste(pathsavefluxfigures, "ferteffects_possible.png", sep=""),width=5,height=3,units="in",res=1200)
grid.arrange(plot_1, plot_2, nrow = 1, ncol = 2)
dev.off()
png(file = paste(pathsavefluxfigures, "ferteffects_possible.png", sep=""),width=5,height=3,units="in")
grid.arrange(plot_1, plot_2, nrow = 1, ncol = 2)
dev.off()
png(file = paste(pathsavefluxfigures, "ferteffects_possible.png", sep=""),width=5,height=3,units="in",res=400)
grid.arrange(plot_1, plot_2, nrow = 1, ncol = 2)
dev.off()
png(file = paste(pathsavefluxfigures, "ferteffects_possible.png", sep=""),width=7,height=3,units="in",res=400)
grid.arrange(plot_1, plot_2, nrow = 1, ncol = 2)
dev.off()
png(file = paste(pathsavefluxfigures, "ferteffects_possible.png", sep=""),width=7,height=6,units="in",res=400)
grid.arrange(plot_1, plot_2, nrow = 2, ncol = 1)
dev.off()
plot_1 = ggplot(subset(fluxessitesummary, LUtype %in% c("M") & SampleDate2 > "2013/11/01"), aes(x=SampleDate2, y=meanfluxN2Ol)) + geom_point(size=2.5) + geom_line() + facet_grid(. ~ Site)
plot_1
plot_1 = ggplot(subset(fluxessitesummary, LUtype %in% c("M") & SampleDate2 > "2013/11/01"), aes(x=SampleDate2, y=meanfluxN2Ol)) + geom_point(size=2.5) + geom_line() + facet_grid(. ~ Site)
plot_1
plot_2 = ggplot(subset(fluxessitesummary, Site %in% c("SM") & SampleDate2 > "2013/11/01"), aes(x=SampleDate2, y=meanfluxN2Ol)) + geom_point(size=2.5) + geom_line()
plot_2
png(file = paste(pathsavefluxfigures, "ferteffects_possible.png", sep=""),width=7,height=6,units="in",res=400)
grid.arrange(plot_1, plot_2, nrow = 2, ncol = 1)
dev.off()
plot_1 = ggplot(subset(fluxessitesummary, LUtype %in% c("M") & SampleDate2 > "2013/11/01"), aes(x=SampleDate2, y=meanfluxN2Ol)) + geom_point(size=2.5) + geom_line() + facet_grid(. ~ Site) + xlab("Sampling Date") + ylab("ngN/cm2/hr (linear fit)")
plot_1
plot_2 = ggplot(subset(fluxessitesummary, Site %in% c("SM") & SampleDate2 > "2013/11/01"), aes(x=SampleDate2, y=meanfluxN2Ol)) + geom_point(size=2.5) + geom_line() + xlab("Sampling Date") + ylab("ngN/cm2/hr (linear fit)")
plot_2
png(file = paste(pathsavefluxfigures, "ferteffects_possible.png", sep=""),width=7,height=6,units="in",res=400)
grid.arrange(plot_1, plot_2, nrow = 2, ncol = 1)
dev.off()
plot_1 = ggplot(subset(fluxessitesummary, LUtype %in% c("M") & SampleDate2 > "2013/11/01"), aes(x=SampleDate2, y=meanfluxN2Ol)) + geom_point(size=2.5) + geom_line() + facet_grid(. ~ Site) + labs(title = "title", x = "Sampling Date", y = "ngN/cm2/hr (linear fit)")
plot_1
plot_1 = ggplot(subset(fluxessitesummary, LUtype %in% c("M") & SampleDate2 > "2013/11/01"), aes(x=SampleDate2, y=meanfluxN2Ol)) + geom_point(size=2.5) + geom_line() + facet_grid(. ~ Site) + labs(title = "Possibly captured fertilizer effects", x = "Sampling Date", y = "ngN/cm2/hr (linear fit)")
plot_1
plot_2 = ggplot(subset(fluxessitesummary, Site %in% c("SM") & SampleDate2 > "2013/11/01"), aes(x=SampleDate2, y=meanfluxN2Ol)) + geom_point(size=2.5) + geom_line() + xlab("Sampling Date") + ylab("ngN/cm2/hr (linear fit)")
plot_2
plot_1 = ggplot(subset(fluxessitesummary, LUtype %in% c("M") & SampleDate2 > "2013/11/01"), aes(x=SampleDate2, y=meanfluxN2Ol)) + geom_point(size=2.5) + geom_line() + facet_grid(. ~ Site) + labs(title = "Possibly captured fertilizer effects", x = "Sampling Date", y = "ngN/cm2/hr (linear fit)")
plot_1
plot_2 = ggplot(subset(fluxessitesummary, Site %in% c("SM") & SampleDate2 > "2013/11/01"), aes(x=SampleDate2, y=meanfluxN2Ol)) + geom_point(size=2.5) + geom_line() + labs(title = "", x = "Sampling Date", y = "ngN/cm2/hr (linear fit)")
plot_2
png(file = paste(pathsavefluxfigures, "ferteffects_possible.png", sep=""),width=7,height=6,units="in",res=400)
grid.arrange(plot_1, plot_2, nrow = 2, ncol = 1)
dev.off()
plot_3 = ggplot(subset(fluxessitesummary, LUtype %in% c("M") & SampleDate2 > "2013/11/01"), aes(x=SampleDate2, y=meanfluxCO2l)) + geom_point(size=2.5) + geom_line() + facet_grid(. ~ Site) + labs(title = "Carbon fertilizer effects?", x = "Sampling Date", y = "ngC/cm2/hr (linear fit)")
plot_3
plot_1 = ggplot(subset(fluxessitesummary, LUtype %in% c("M") & SampleDate2 > "2013/11/01"), aes(x=SampleDate2, y=meanfluxN2Ol)) + geom_point(size=2.5) + geom_line() + facet_grid(. ~ Site) + labs(title = "Possibly captured fertilizer effects", x = "Sampling Date", y = "ngN/cm2/hr (linear fit)")
plot_1
plot_4 = ggplot(subset(fluxessitesummary, Site %in% c("SM") & SampleDate2 > "2013/11/01"), aes(x=SampleDate2, y=meanfluxCO2l)) + geom_point(size=2.5) + geom_line() + labs(title = "", x = "Sampling Date", y = "ngC/cm2/hr (linear fit)")
plot_4
plot_3 = ggplot(subset(fluxessitesummary, LUtype %in% c("M") & SampleDate2 > "2013/11/01"), aes(x=SampleDate2, y=meanfluxCO2l)) + geom_point(size=2.5) + geom_line() + facet_grid(. ~ Site) + labs(title = "Carbon fertilizer effects?", x = "Sampling Date", y = "ngC/cm2/hr (linear fit)")
plot_3
plot_4 = ggplot(subset(fluxessitesummary, Site %in% c("SM") & SampleDate2 > "2013/11/01"), aes(x=SampleDate2, y=meanfluxCO2l)) + geom_point(size=2.5) + geom_line() + labs(title = "", x = "Sampling Date", y = "ngC/cm2/hr (linear fit)")
plot_4
png(file = paste(pathsavefluxfigures, "ferteffects_carbon_possible.png", sep=""),width=7,height=6,units="in",res=400)
grid.arrange(plot_3, plot_4, nrow = 2, ncol = 1)
dev.off()
plot_3 = ggplot(subset(fluxessitesummary, LUtype %in% c("M") & SampleDate2 > "2013/11/01"), aes(x=SampleDate2, y=meanfluxCO2l)) + geom_point(size=2.5) + geom_line() + facet_grid(. ~ Site) + labs(title = "CO2 fertilizer effects?  (comparison)", x = "Sampling Date", y = "ngC/cm2/hr (linear fit)")
plot_3
plot_4 = ggplot(subset(fluxessitesummary, Site %in% c("SM") & SampleDate2 > "2013/11/01"), aes(x=SampleDate2, y=meanfluxCO2l)) + geom_point(size=2.5) + geom_line() + labs(title = "", x = "Sampling Date", y = "ngC/cm2/hr (linear fit)")
plot_4
png(file = paste(pathsavefluxfigures, "ferteffects_carbon_possible.png", sep=""),width=7,height=6,units="in",res=400)
grid.arrange(plot_3, plot_4, nrow = 2, ncol = 1)
dev.off()
soilmoisture <- read.delim("~/Documents/GITHUB/cso011code_TanguroN2OLosses/Soil-Data-Raw-R/Soil-Data-RawFolders/Field Moisture Extr Data/soilmoisture", stringsAsFactors=FALSE)
soilmoisture <- read.delim("~/Documents/GITHUB/cso011code_TanguroN2OLosses/Soil-Data-Raw-R/Soil-Data-RawFolders/Field Moisture Extr Data/soilmoisture.txt", stringsAsFactors=FALSE)
View(soilmoisture)
soilmoisture <- read.delim("~/Documents/GITHUB/cso011code_TanguroN2OLosses/Soil-Data-Raw-R/Soil-Data-RawFolders/Field Moisture Extr Data/soilmoisture.txt", stringsAsFactors=FALSE)
View(soilmoisture)
soilmoisture$SampleDate2 <- as.Date(soilmoisture$SampleDate, format="%d/%m/%Y")
View(soilmoisture)
soilmoisture <- read.delim("~/Documents/GITHUB/cso011code_TanguroN2OLosses/Soil-Data-Raw-R/Soil-Data-RawFolders/Field Moisture Extr Data/soilmoisture.txt", stringsAsFactors=FALSE)
View(soilmoisture)
gsub("/14","/2014", soilmoisture$SampleDate , fixed=TRUE)
soilmoisture$SampleDate <- gsub("/14","/2014", soilmoisture$SampleDate , fixed=TRUE)
View(soilmoisture)
soilmoisture$SampleDate2 <- as.Date(soilmoisture$SampleDate, format="%d/%m/%Y")
View(soilmoisture)
View(soilmoisture)
